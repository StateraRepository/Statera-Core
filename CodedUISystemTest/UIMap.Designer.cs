// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUISystemTest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// ValidLoginCodeUITest - Use 'ValidLoginCodeUITestParams' to pass parameters into this method.
        /// </summary>
        public void ValidLoginCodeUITest()
        {
            #region Variable Declarations
            HtmlCustom uIItemCustom = this.UIWorkingInternetExploWindow.UIASPNETCore10AngularIDocument.UIContactInfoLoginPane.UIItemCustom;
            HtmlEdit uIEmailEdit = this.UIWorkingInternetExploWindow.UIMyCompanyDocument.UIEmailEdit;
            HtmlDiv uIUsernamePane = this.UIWorkingInternetExploWindow.UIMyCompanyDocument.UIUsernamePane;
            HtmlEdit uIPasswordEdit = this.UIWorkingInternetExploWindow.UIMyCompanyDocument.UIPasswordEdit;
            HtmlCustom uIItemCustom1 = this.UIWorkingInternetExploWindow.UIMyCompanyDocument.UIItemCustom;
            HtmlButton uILoginButton = this.UIWorkingInternetExploWindow.UIMyCompanyDocument.UILoginButton;
            HtmlHyperlink uIContactInfoHyperlink = this.UIWorkingInternetExploWindow.UIASPNETCore10AngularIDocument1.UIContactInfoLogoutPane.UIContactInfoHyperlink;
            #endregion

            // Go to web page 'http://qa.company.com/' using new browser instance
            this.UIWorkingInternetExploWindow.LaunchUrl(new System.Uri(this.ValidLoginCodeUITestParams.UIWorkingInternetExploWindowUrl));

            // Click custom control
            Mouse.Click(uIItemCustom, new Point(38, 36));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'Email' text box at (1, 1)
            Mouse.Hover(uIEmailEdit, new Point(1, 1));

            // Mouse hover 'Username' pane at (1, 1)
            Mouse.Hover(uIUsernamePane, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Type 'user1@company.com' in 'Email' text box
            uIEmailEdit.Text = this.ValidLoginCodeUITestParams.UIEmailEditText;

            // Type '{Tab}' in 'Email' text box
            Keyboard.SendKeys(uIEmailEdit, this.ValidLoginCodeUITestParams.UIEmailEditSendKeys, ModifierKeys.None);

            // Type '********' in 'Password' text box
            uIPasswordEdit.Password = this.ValidLoginCodeUITestParams.UIPasswordEditPassword;

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'Email' text box at (1, 1)
            Mouse.Hover(uIEmailEdit, new Point(1, 1));

            // Mouse hover  custom control at (1, 1)
            Mouse.Hover(uIItemCustom1, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click 'Login' button
            Mouse.Click(uILoginButton, new Point(36, 18));

            // Click 'Contact Info' link
            Mouse.Click(uIContactInfoHyperlink, new Point(68, 35));
        }
        
        /// <summary>
        /// ClickLoginMethod - Use 'ClickLoginMethodParams' to pass parameters into this method.
        /// </summary>
        public void ClickLoginMethod()
        {
            #region Variable Declarations
            HtmlCustom uIItemCustom = this.UIWorkingInternetExploWindow.UIASPNETCore10AngularIDocument.UIContactInfoLoginPane.UIItemCustom;
            #endregion

            // Go to web page 'http://qa.company.com/' using new browser instance
            this.UIWorkingInternetExploWindow.LaunchUrl(new System.Uri(this.ClickLoginMethodParams.UIWorkingInternetExploWindowUrl));

            // Click custom control
            Mouse.Click(uIItemCustom, new Point(39, 27));
        }
        
        /// <summary>
        /// Open IE11 and clear history
        /// </summary>
        public void ClearHistoryMethod()
        {
            #region Variable Declarations
            HtmlHyperlink uISigninHyperlink = this.UIGoogleInternetExplorWindow.UIGoogleDocument.UISigninHyperlink;
            WinButton uIToolsButton = this.UIGoogleInternetExplorWindow.UIFavoritesandToolsBarToolBar.UIToolsButton;
            WinMenuItem uIInternetoptionsMenuItem = this.UIItemWindow.UIContextMenu.UIInternetoptionsMenuItem;
            WinButton uIDeleteButton = this.UIInternetOptionsWindow.UIDeleteWindow.UIDeleteButton;
            WinButton uIDeleteButton1 = this.UIDeleteBrowsingHistorWindow.UIDeleteWindow.UIDeleteButton;
            WinButton uIApplyButton = this.UIInternetOptionsWindow.UIApplyWindow.UIApplyButton;
            WinButton uIOKButton = this.UIInternetOptionsWindow.UIOKWindow.UIOKButton;
            #endregion

            // Go to web page 'http://google.com/' using new browser instance
            this.UIGoogleInternetExplorWindow.LaunchUrl(new System.Uri(this.ClearHistoryMethodParams.UIGoogleInternetExplorWindowUrl));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'Sign in' link at (1, 1)
            Mouse.Hover(uISigninHyperlink, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click 'Tools' button
            Mouse.Click(uIToolsButton, new Point(12, 12));

            // Click 'Internet options' menu item
            Mouse.Click(uIInternetoptionsMenuItem, new Point(108, 15));

            // Click '&Delete...' button
            Mouse.Click(uIDeleteButton, new Point(29, 15));

            // Click '&Delete' button
            Mouse.Click(uIDeleteButton1, new Point(47, 13));

            // Click '&Apply' button
            Mouse.Click(uIApplyButton, new Point(24, 8));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(34, 14));
        }
        
        

        /// <summary>
        /// ClickLoginAfterClearHistoryMethod - Use 'ClickLoginAfterClearHistoryMethodParams' to pass parameters into this method.
        /// </summary>
        public void ClickLoginAfterClearHistoryMethod()
        {
            #region Variable Declarations
            WinButton uIToolsButton = this.UIGoogleInternetExplorWindow.UIFavoritesandToolsBarToolBar.UIToolsButton;
            WinMenuItem uIInternetoptionsMenuItem = this.UIItemWindow.UIContextMenu.UIInternetoptionsMenuItem;
            HtmlDiv uILgaPane = this.UIGoogleInternetExplorWindow.UIGoogleDocument.UILgaPane;
            WinButton uIDeleteButton = this.UIInternetOptionsWindow.UIDeleteWindow.UIDeleteButton;
            WinButton uIDeleteButton1 = this.UIDeleteBrowsingHistorWindow.UIDeleteWindow.UIDeleteButton;
            WinButton uIOKButton = this.UIInternetOptionsWindow.UIOKWindow.UIOKButton;
            BrowserWindow uIGoogleInternetExplorWindow = this.UIGoogleInternetExplorWindow;
            HtmlCustom uIItemCustom = this.UIGoogleInternetExplorWindow.UIASPNETCore10AngularIDocument.UIContactInfoLoginPane.UIItemCustom;
            WinButton uICloseButton = this.UIGoogleInternetExplorWindow.UINotificationToolBar.UICloseButton;
            WinButton uICloseButton1 = this.UIGoogleInternetExplorWindow.UIASPNETCore10AngularITitleBar.UICloseButton;
            #endregion

            // Go to web page 'http://google.com/' using new browser instance
            this.UIGoogleInternetExplorWindow.LaunchUrl(new System.Uri(this.ClickLoginAfterClearHistoryMethodParams.UIGoogleInternetExplorWindowUrl));

            // Click 'Tools' button
            Mouse.Click(uIToolsButton, new Point(14, 15));

            // Click 'Internet options' menu item
            Mouse.Click(uIInternetoptionsMenuItem, new Point(38, 15));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'lga' pane at (1, 1)
            Mouse.Hover(uILgaPane, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click '&Delete...' button
            Mouse.Click(uIDeleteButton, new Point(38, 14));

            // Click '&Delete' button
            Mouse.Click(uIDeleteButton1, new Point(54, 11));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(45, 11));

            // Go to web page 'http://qa.company.com/'
            uIGoogleInternetExplorWindow.NavigateToUrl(new System.Uri(this.ClickLoginAfterClearHistoryMethodParams.UIGoogleInternetExplorWindowUrl1));

            // Click custom control
            Mouse.Click(uIItemCustom, new Point(29, 26));

            // Click custom control
            Mouse.Click(uIItemCustom, new Point(43, 30));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(9, 5));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click custom control
            Mouse.Click(uIItemCustom, new Point(25, 21));

            // Click custom control
            Mouse.Click(uIItemCustom, new Point(28, 21));

            // Move 'Close' button to 'Google - Internet Explorer' window
            uIGoogleInternetExplorWindow.EnsureClickable(new Point(1143, 43));
            Mouse.StartDragging(uICloseButton1, new Point(31, 14));
            Mouse.StopDragging(uIGoogleInternetExplorWindow, new Point(1143, 43));
        }
        
        /// <summary>
        /// Start with IE open
        /// </summary>
        public void IEAlreadyOpen1()
        {
            #region Variable Declarations
            BrowserWindow uIGoogleInternetExplorWindow1 = this.UIGoogleInternetExplorWindow1;
            HtmlCustom uIItemCustom = this.UIGoogleInternetExplorWindow2.UIASPNETCore10AngularIDocument.UIContactInfoLoginPane.UIItemCustom;
            #endregion

            // Go to web page 'http://qa.company.com/'
            uIGoogleInternetExplorWindow1.NavigateToUrl(new System.Uri(this.IEAlreadyOpen1Params.UIGoogleInternetExplorWindow1Url));

            // Click custom control
            Mouse.Click(uIItemCustom, new Point(38, 24));
        }
        
        /// <summary>
        /// Invalid Username and Password combo throws an error
        /// </summary>
        public void InvalidUsername_Password_Method()
        {
            #region Variable Declarations
            WinButton uIToolsButton = this.UIGoogleInternetExplorWindow.UIFavoritesandToolsBarToolBar.UIToolsButton;
            WinMenuItem uIInternetoptionsMenuItem = this.UIItemWindow.UIContextMenu.UIInternetoptionsMenuItem;
            WinButton uIDeleteButton = this.UIInternetOptionsWindow.UIDeleteWindow.UIDeleteButton;
            WinControl uIDeleteBrowsingHistorDialog = this.UIDeleteBrowsingHistorWindow.UIDeleteBrowsingHistorDialog;
            WinButton uIDeleteButton1 = this.UIDeleteBrowsingHistorWindow.UIDeleteWindow.UIDeleteButton;
            WinButton uIOKButton = this.UIInternetOptionsWindow.UIOKWindow.UIOKButton;
            WinButton uICloseButton = this.UIGoogleInternetExplorWindow.UINotificationToolBar.UICloseButton;
            HtmlDiv uIViewportPane = this.UIGoogleInternetExplorWindow.UIGoogleDocument.UIViewportPane;
            HtmlHyperlink uIGoogleappsHyperlink = this.UIGoogleInternetExplorWindow.UIGoogleDocument.UIGbwaPane.UIGoogleappsHyperlink;
            BrowserWindow uIGoogleInternetExplorWindow4 = this.UIGoogleInternetExplorWindow4;
            HtmlCustom uIItemCustom = this.UIGoogleInternetExplorWindow5.UIASPNETCore10AngularIDocument.UIContactInfoLoginPane.UIItemCustom;
            HtmlEdit uIEmailEdit = this.UIGoogleInternetExplorWindow6.UIMyCompanyDocument.UIEmailEdit;
            HtmlEdit uIPasswordEdit = this.UIGoogleInternetExplorWindow6.UIMyCompanyDocument.UIPasswordEdit;
            HtmlDocument uIMyCompanyDocument1 = this.UIWorkingInternetExploWindow.UIMyCompanyDocument1;
            HtmlButton uILoginButton = this.UIWorkingInternetExploWindow.UIMyCompanyDocument1.UILoginButton;
            #endregion

            // Go to web page 'http://google.com/' using new browser instance
            this.UIGoogleInternetExplorWindow3.LaunchUrl(new System.Uri(this.InvalidUsername_Password_MethodParams.UIGoogleInternetExplorWindow3Url));

            // Click 'Tools' button
            Mouse.Click(uIToolsButton, new Point(10, 14));

            // Click 'Internet options' menu item
            Mouse.Click(uIInternetoptionsMenuItem, new Point(66, 16));

            // Click '&Delete...' button
            Mouse.Click(uIDeleteButton, new Point(23, 8));

            // Click 'Delete Browsing History' Dialog
            Mouse.Click(uIDeleteBrowsingHistorDialog, new Point(231, 496));

            // Click '&Delete' button
            Mouse.Click(uIDeleteButton1, new Point(45, 11));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(46, 8));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(11, 6));

            // Mouse hover 'viewport' pane at (1, 1)
            Mouse.Hover(uIViewportPane, new Point(1, 1));

            // Mouse hover 'Google apps' link at (1, 1)
            Mouse.Hover(uIGoogleappsHyperlink, new Point(1, 1));

            // Mouse hover 'viewport' pane at (1, 1)
            Mouse.Hover(uIViewportPane, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Go to web page 'http://qa.company.com/'
            uIGoogleInternetExplorWindow4.NavigateToUrl(new System.Uri(this.InvalidUsername_Password_MethodParams.UIGoogleInternetExplorWindow4Url));

            // Click custom control
            Mouse.Click(uIItemCustom, new Point(37, 22));

            // Type 'foo@com' in 'Email' text box
            uIEmailEdit.Text = this.InvalidUsername_Password_MethodParams.UIEmailEditText;

            // Type '********' in 'Password' text box
            uIPasswordEdit.Password = this.InvalidUsername_Password_MethodParams.UIPasswordEditPassword;

            // Click 'My Company' document
            Mouse.Click(uIMyCompanyDocument1, new Point(980, 705));

            // Click 'Login' button
            Mouse.Click(uILoginButton, new Point(20, 25));
        }
        
        /// <summary>
        /// Valid_Username_Invalid_Password
        /// </summary>
        public void Valid_Username_Invalid_Password_Method()
        {
            #region Variable Declarations
            WinButton uIToolsButton = this.UIGoogleInternetExplorWindow.UIFavoritesandToolsBarToolBar.UIToolsButton;
            WinMenuItem uIInternetoptionsMenuItem = this.UIItemWindow.UIContextMenu.UIInternetoptionsMenuItem;
            WinButton uIDeleteButton = this.UIInternetOptionsWindow.UIDeleteWindow.UIDeleteButton;
            WinButton uIDeleteButton1 = this.UIDeleteBrowsingHistorWindow.UIDeleteWindow.UIDeleteButton;
            WinButton uICloseButton = this.UIGoogleInternetExplorWindow.UINotificationToolBar.UICloseButton;
            WinButton uIOKButton = this.UIInternetOptionsWindow.UIOKWindow.UIOKButton;
            WinTitleBar uIASPNETCore10AngularITitleBar = this.UIGoogleInternetExplorWindow.UIASPNETCore10AngularITitleBar;
            WinEdit uIAddressandsearchusinEdit = this.UIGoogleInternetExplorWindow8.UIAddressBarClient.UIAddressandsearchusinEdit;
            HtmlDiv uIViewportPane = this.UIGoogleInternetExplorWindow.UIGoogleDocument.UIViewportPane;
            HtmlEdit uISearchEdit = this.UIGoogleInternetExplorWindow.UIGoogleDocument.UISearchEdit;
            HtmlImage uISamuelJohnsons308thBImage = this.UIGoogleInternetExplorWindow.UIGoogleDocument.UIHplogoPane.UISamuelJohnsons308thBImage;
            BrowserWindow uIGoogleInternetExplorWindow9 = this.UIGoogleInternetExplorWindow9;
            HtmlCustom uIItemCustom = this.UIGoogleInternetExplorWindow10.UIASPNETCore10AngularIDocument.UIContactInfoLoginPane.UIItemCustom;
            HtmlCustom uIItemCustom1 = this.UIGoogleInternetExplorWindow11.UIASPNETCore10AngularIDocument.UIContactInfoLoginPane.UIItemCustom;
            HtmlEdit uIEmailEdit = this.UIGoogleInternetExplorWindow12.UIMyCompanyDocument.UIEmailEdit;
            HtmlEdit uIPasswordEdit = this.UIGoogleInternetExplorWindow12.UIMyCompanyDocument.UIPasswordEdit;
            HtmlButton uILoginButton = this.UIGoogleInternetExplorWindow12.UIMyCompanyDocument.UILoginButton;
            #endregion

            // Go to web page 'http://google.com/' using new browser instance
            this.UIGoogleInternetExplorWindow7.LaunchUrl(new System.Uri(this.Valid_Username_Invalid_Password_MethodParams.UIGoogleInternetExplorWindow7Url));

            // Click 'Tools' button
            Mouse.Click(uIToolsButton, new Point(7, 5));

            // Click 'Internet options' menu item
            Mouse.Click(uIInternetoptionsMenuItem, new Point(97, 15));

            // Click '&Delete...' button
            Mouse.Click(uIDeleteButton, new Point(33, 17));

            // Click '&Delete' button
            Mouse.Click(uIDeleteButton1, new Point(54, 19));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(7, 7));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(38, 8));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(10, 7));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click 'ASP.NET Core 1.0 Angular IdentityServer4 Client - ...' title bar
            Mouse.Click(uIASPNETCore10AngularITitleBar, new Point(438, 16));

            // Click 'Address and search using Bing' text box
            Mouse.Click(uIAddressandsearchusinEdit, new Point(333, 8));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'viewport' pane at (1, 1)
            Mouse.Hover(uIViewportPane, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Type 'qa.company.com' in 'Address and search using Bing' text box
            uIAddressandsearchusinEdit.Text = this.Valid_Username_Invalid_Password_MethodParams.UIAddressandsearchusinEditText;

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'Search' text box at (1, 1)
            Mouse.Hover(uISearchEdit, new Point(1, 1));

            // Mouse hover 'Samuel Johnson's 308th Birthday' image at (1, 1)
            Mouse.Hover(uISamuelJohnsons308thBImage, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Go to web page 'http://qa.company.com/'
            uIGoogleInternetExplorWindow9.NavigateToUrl(new System.Uri(this.Valid_Username_Invalid_Password_MethodParams.UIGoogleInternetExplorWindow9Url));

            // Click custom control
            Mouse.Click(uIItemCustom, new Point(23, 30));

            // Click custom control
            Mouse.Click(uIItemCustom1, new Point(31, 28));

            // Type 'user1@company.com' in 'Email' text box
            uIEmailEdit.Text = this.Valid_Username_Invalid_Password_MethodParams.UIEmailEditText;

            // Type '{Tab}' in 'Email' text box
            Keyboard.SendKeys(uIEmailEdit, this.Valid_Username_Invalid_Password_MethodParams.UIEmailEditSendKeys, ModifierKeys.None);

            // Type '********' in 'Password' text box
            uIPasswordEdit.Password = this.Valid_Username_Invalid_Password_MethodParams.UIPasswordEditPassword;

            // Click 'Login' button
            Mouse.Click(uILoginButton, new Point(15, 23));
        }
        
        /// <summary>
        /// InvalidPasswordMethod - Use 'InvalidPasswordMethodExpectedValues' to pass parameters into this method.
        /// </summary>
        public void InvalidPasswordMethod()
        {
            #region Variable Declarations
            HtmlDiv uIErrorInvalidusernamePane = this.UIGoogleInternetExplorWindow16.UIMyCompanyDocument.UIErrorInvalidusernamePane;
            #endregion

            // Verify that the 'TagName' property of 'Error Invalid username or password' pane equals 'DIV'
            Assert.AreEqual(this.InvalidPasswordMethodExpectedValues.UIErrorInvalidusernamePaneTagName, uIErrorInvalidusernamePane.TagName, "Failure to throw invalid password message");
        }
        
        /// <summary>
        /// Invalid_Password Valid Username
        /// </summary>
        public void Invalid_Password_Method()
        {
            #region Variable Declarations
            WinButton uIToolsButton = this.UIGoogleInternetExplorWindow.UIFavoritesandToolsBarToolBar.UIToolsButton;
            WinMenuItem uIInternetoptionsMenuItem = this.UIItemWindow.UIContextMenu.UIInternetoptionsMenuItem;
            WinButton uIDeleteButton = this.UIInternetOptionsWindow.UIDeleteWindow.UIDeleteButton;
            WinButton uIDeleteButton1 = this.UIDeleteBrowsingHistorWindow.UIDeleteWindow.UIDeleteButton;
            WinButton uIOKButton = this.UIInternetOptionsWindow.UIOKWindow.UIOKButton;
            HtmlHyperlink uIGoogleappsHyperlink = this.UIGoogleInternetExplorWindow.UIGoogleDocument.UIGbwaPane.UIGoogleappsHyperlink;
            HtmlDiv uIGBPane = this.UIGoogleInternetExplorWindow.UIGoogleDocument.UIGBPane;
            BrowserWindow uIGoogleInternetExplorWindow18 = this.UIGoogleInternetExplorWindow18;
            HtmlCustom uIItemCustom = this.UIGoogleInternetExplorWindow19.UIASPNETCore10AngularIDocument.UIContactInfoLoginPane.UIItemCustom;
            HtmlEdit uIEmailEdit = this.UIGoogleInternetExplorWindow20.UIMyCompanyDocument.UIEmailEdit;
            HtmlEdit uIPasswordEdit = this.UIGoogleInternetExplorWindow20.UIMyCompanyDocument.UIPasswordEdit;
            HtmlButton uILoginButton = this.UIGoogleInternetExplorWindow20.UIMyCompanyDocument.UILoginButton;
            #endregion

            // Go to web page 'http://google.com/' using new browser instance
            this.UIGoogleInternetExplorWindow17.LaunchUrl(new System.Uri(this.Invalid_Password_MethodParams.UIGoogleInternetExplorWindow17Url));

            // Click 'Tools' button
            Mouse.Click(uIToolsButton, new Point(13, 14));

            // Click 'Internet options' menu item
            Mouse.Click(uIInternetoptionsMenuItem, new Point(56, 16));

            // Click '&Delete...' button
            Mouse.Click(uIDeleteButton, new Point(31, 7));

            // Click '&Delete' button
            Mouse.Click(uIDeleteButton1, new Point(31, 10));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(39, 9));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'Google apps' link at (1, 1)
            Mouse.Hover(uIGoogleappsHyperlink, new Point(1, 1));

            // Mouse hover 'gb' pane at (1, 1)
            Mouse.Hover(uIGBPane, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Go to web page 'http://qa.company.com/'
            uIGoogleInternetExplorWindow18.NavigateToUrl(new System.Uri(this.Invalid_Password_MethodParams.UIGoogleInternetExplorWindow18Url));

            // Click custom control
            Mouse.Click(uIItemCustom, new Point(26, 23));

            // Type 'user1@company.com' in 'Email' text box
            uIEmailEdit.Text = this.Invalid_Password_MethodParams.UIEmailEditText;

            // Type '{Tab}' in 'Email' text box
            Keyboard.SendKeys(uIEmailEdit, this.Invalid_Password_MethodParams.UIEmailEditSendKeys, ModifierKeys.None);

            // Type '********' in 'Password' text box
            uIPasswordEdit.Password = this.Invalid_Password_MethodParams.UIPasswordEditPassword;

            // Click 'Login' button
            Mouse.Click(uILoginButton, new Point(24, 14));
        }
        
        /// <summary>
        /// Invalid Username throws error message
        /// </summary>
        public void RecordedInvalidUsername()
        {
            #region Variable Declarations
            HtmlHyperlink uIImagesHyperlink = this.UIGoogleInternetExplorWindow.UIGoogleDocument.UIGbwPane.UIImagesHyperlink;
            HtmlDiv uIViewportPane = this.UIGoogleInternetExplorWindow.UIGoogleDocument.UIViewportPane;
            WinButton uIToolsButton = this.UIGoogleInternetExplorWindow.UIFavoritesandToolsBarToolBar.UIToolsButton;
            WinMenuItem uIInternetoptionsMenuItem = this.UIItemWindow.UIContextMenu.UIInternetoptionsMenuItem;
            WinButton uIDeleteButton = this.UIInternetOptionsWindow.UIDeleteWindow.UIDeleteButton;
            WinButton uIDeleteButton1 = this.UIDeleteBrowsingHistorWindow.UIDeleteWindow.UIDeleteButton;
            WinButton uIOKButton = this.UIInternetOptionsWindow.UIOKWindow.UIOKButton;
            WinButton uICloseButton = this.UIGoogleInternetExplorWindow.UINotificationToolBar.UICloseButton;
            WinMenuItem uIAddressMenuItem = this.UIGoogleInternetExplorWindow22.UIAddressComboControlToolBar.UIAddressMenuItem;
            BrowserWindow uIGoogleInternetExplorWindow23 = this.UIGoogleInternetExplorWindow23;
            HtmlCustom uIItemCustom = this.UIGoogleInternetExplorWindow24.UIASPNETCore10AngularIDocument.UIContactInfoLoginPane.UIItemCustom;
            HtmlEdit uIEmailEdit = this.UIGoogleInternetExplorWindow25.UIMyCompanyDocument.UIEmailEdit;
            HtmlEdit uIPasswordEdit = this.UIGoogleInternetExplorWindow25.UIMyCompanyDocument.UIPasswordEdit;
            HtmlButton uILoginButton = this.UIGoogleInternetExplorWindow25.UIMyCompanyDocument.UILoginButton;
            #endregion

            // Go to web page 'http://google.com/' using new browser instance
            this.UIGoogleInternetExplorWindow21.LaunchUrl(new System.Uri(this.RecordedInvalidUsernameParams.UIGoogleInternetExplorWindow21Url));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'Images' link at (1, 1)
            Mouse.Hover(uIImagesHyperlink, new Point(1, 1));

            // Mouse hover 'viewport' pane at (1, 1)
            Mouse.Hover(uIViewportPane, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click 'Tools' button
            Mouse.Click(uIToolsButton, new Point(14, 14));

            // Click 'Internet options' menu item
            Mouse.Click(uIInternetoptionsMenuItem, new Point(137, 7));

            // Click '&Delete...' button
            Mouse.Click(uIDeleteButton, new Point(37, 17));

            // Click '&Delete' button
            Mouse.Click(uIDeleteButton1, new Point(48, 18));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(17, 7));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'viewport' pane at (1, 1)
            Mouse.Hover(uIViewportPane, new Point(1, 1));

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(10, 7));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Click 'Address' menu item
            Mouse.Click(uIAddressMenuItem, new Point(330, 4));

            // Go to web page 'http://qa.company.com/'
            uIGoogleInternetExplorWindow23.NavigateToUrl(new System.Uri(this.RecordedInvalidUsernameParams.UIGoogleInternetExplorWindow23Url));

            // Click custom control
            Mouse.Click(uIItemCustom, new Point(19, 23));

            // Type 'foo' in 'Email' text box
            uIEmailEdit.Text = this.RecordedInvalidUsernameParams.UIEmailEditText;

            // Type '********' in 'Password' text box
            uIPasswordEdit.Password = this.RecordedInvalidUsernameParams.UIPasswordEditPassword;

            // Click 'Login' button
            Mouse.Click(uILoginButton, new Point(44, 8));
        }
        
        /// <summary>
        /// Username Missing At Symbol Throws Error Message
        /// </summary>
        public void RecordedCodedUI_UsernameMissingAtSymbolMethod()
        {
            #region Variable Declarations
            WinButton uIToolsButton = this.UIGoogleInternetExplorWindow.UIFavoritesandToolsBarToolBar.UIToolsButton;
            WinMenuItem uIInternetoptionsMenuItem = this.UIItemWindow.UIContextMenu.UIInternetoptionsMenuItem;
            WinButton uIDeleteButton = this.UIInternetOptionsWindow.UIDeleteWindow.UIDeleteButton;
            WinButton uIDeleteButton1 = this.UIDeleteBrowsingHistorWindow.UIDeleteWindow.UIDeleteButton;
            WinButton uIOKButton = this.UIInternetOptionsWindow.UIOKWindow.UIOKButton;
            HtmlDiv uIPrivacyTermsSettingsPane = this.UIGoogleInternetExplorWindow.UIGoogleDocument.UIFbarPane.UIPrivacyTermsSettingsPane;
            WinButton uICloseButton = this.UIGoogleInternetExplorWindow.UINotificationToolBar.UICloseButton;
            HtmlEdit uISearchEdit1 = this.UIGoogleInternetExplorWindow.UIGoogleDocument.UISearchEdit1;
            BrowserWindow uIGoogleInternetExplorWindow27 = this.UIGoogleInternetExplorWindow27;
            HtmlCustom uIItemCustom = this.UIGoogleInternetExplorWindow28.UIASPNETCore10AngularIDocument.UIContactInfoLoginPane.UIItemCustom;
            HtmlCustom uIItemCustom1 = this.UIGoogleInternetExplorWindow29.UIASPNETCore10AngularIDocument.UIContactInfoLoginPane.UIItemCustom;
            HtmlEdit uIEmailEdit = this.UIGoogleInternetExplorWindow30.UIMyCompanyDocument.UIEmailEdit;
            HtmlEdit uIPasswordEdit = this.UIGoogleInternetExplorWindow30.UIMyCompanyDocument.UIPasswordEdit;
            HtmlButton uILoginButton = this.UIGoogleInternetExplorWindow30.UIMyCompanyDocument.UILoginButton;
            #endregion

            // Go to web page 'http://google.com/' using new browser instance
            this.UIGoogleInternetExplorWindow26.LaunchUrl(new System.Uri(this.RecordedCodedUI_UsernameMissingAtSymbolMethodParams.UIGoogleInternetExplorWindow26Url));

            // Click 'Tools' button
            Mouse.Click(uIToolsButton, new Point(8, 18));

            // Click 'Internet options' menu item
            Mouse.Click(uIInternetoptionsMenuItem, new Point(98, 13));

            // Click '&Delete...' button
            Mouse.Click(uIDeleteButton, new Point(27, 13));

            // Click '&Delete' button
            Mouse.Click(uIDeleteButton1, new Point(39, 16));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(56, 9));

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover 'Privacy Terms Settings Search settings' pane at (1, 1)
            Mouse.Hover(uIPrivacyTermsSettingsPane, new Point(1, 1));

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(5, 6));

            // Mouse hover 'Search' text box at (1, 1)
            Mouse.Hover(uISearchEdit1, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Go to web page 'http://qa.company.com/'
            uIGoogleInternetExplorWindow27.NavigateToUrl(new System.Uri(this.RecordedCodedUI_UsernameMissingAtSymbolMethodParams.UIGoogleInternetExplorWindow27Url));

            // Click custom control
            Mouse.Click(uIItemCustom, new Point(38, 24));

            // Click custom control
            Mouse.Click(uIItemCustom1, new Point(38, 24));

            // Type 'user1company.com' in 'Email' text box
            uIEmailEdit.Text = this.RecordedCodedUI_UsernameMissingAtSymbolMethodParams.UIEmailEditText;

            // Type '********' in 'Password' text box
            uIPasswordEdit.Password = this.RecordedCodedUI_UsernameMissingAtSymbolMethodParams.UIPasswordEditPassword;

            // Click 'Login' button
            Mouse.Click(uILoginButton, new Point(29, 9));
        }
        
        /// <summary>
        /// Correct Error Message Displayed if username missing @
        /// </summary>
        public void AssertCorrectErrorMessageDisplayedMethod()
        {
            #region Variable Declarations
            HtmlDiv uIErrorInvalidusernamePane = this.UIGoogleInternetExplorWindow30.UIMyCompanyDocument.UIErrorInvalidusernamePane;
            #endregion

            // Verify that the 'TagName' property of 'Error Invalid username or password' pane equals 'DIV'
            Assert.AreEqual(this.AssertCorrectErrorMessageDisplayedMethodExpectedValues.UIErrorInvalidusernamePaneTagName, uIErrorInvalidusernamePane.TagName, "Failed to throw invalid username when missing @");
        }
        
        #region Properties
        public virtual ValidLoginCodeUITestParams ValidLoginCodeUITestParams
        {
            get
            {
                if ((this.mValidLoginCodeUITestParams == null))
                {
                    this.mValidLoginCodeUITestParams = new ValidLoginCodeUITestParams();
                }
                return this.mValidLoginCodeUITestParams;
            }
        }
        
        public virtual ClickLoginMethodParams ClickLoginMethodParams
        {
            get
            {
                if ((this.mClickLoginMethodParams == null))
                {
                    this.mClickLoginMethodParams = new ClickLoginMethodParams();
                }
                return this.mClickLoginMethodParams;
            }
        }
        
        public virtual ClearHistoryMethodParams ClearHistoryMethodParams
        {
            get
            {
                if ((this.mClearHistoryMethodParams == null))
                {
                    this.mClearHistoryMethodParams = new ClearHistoryMethodParams();
                }
                return this.mClearHistoryMethodParams;
            }
        }
        
        public virtual FooMethodExpectedValues FooMethodExpectedValues
        {
            get
            {
                if ((this.mFooMethodExpectedValues == null))
                {
                    this.mFooMethodExpectedValues = new FooMethodExpectedValues();
                }
                return this.mFooMethodExpectedValues;
            }
        }
        
        public virtual ClickLoginAfterClearHistoryMethodParams ClickLoginAfterClearHistoryMethodParams
        {
            get
            {
                if ((this.mClickLoginAfterClearHistoryMethodParams == null))
                {
                    this.mClickLoginAfterClearHistoryMethodParams = new ClickLoginAfterClearHistoryMethodParams();
                }
                return this.mClickLoginAfterClearHistoryMethodParams;
            }
        }
        
        public virtual IEAlreadyOpen1Params IEAlreadyOpen1Params
        {
            get
            {
                if ((this.mIEAlreadyOpen1Params == null))
                {
                    this.mIEAlreadyOpen1Params = new IEAlreadyOpen1Params();
                }
                return this.mIEAlreadyOpen1Params;
            }
        }
        
        public virtual InvalidUsername_Password_MethodParams InvalidUsername_Password_MethodParams
        {
            get
            {
                if ((this.mInvalidUsername_Password_MethodParams == null))
                {
                    this.mInvalidUsername_Password_MethodParams = new InvalidUsername_Password_MethodParams();
                }
                return this.mInvalidUsername_Password_MethodParams;
            }
        }
        
        public virtual Valid_Username_Invalid_Password_MethodParams Valid_Username_Invalid_Password_MethodParams
        {
            get
            {
                if ((this.mValid_Username_Invalid_Password_MethodParams == null))
                {
                    this.mValid_Username_Invalid_Password_MethodParams = new Valid_Username_Invalid_Password_MethodParams();
                }
                return this.mValid_Username_Invalid_Password_MethodParams;
            }
        }
        
        public virtual InvalidPasswordMethodExpectedValues InvalidPasswordMethodExpectedValues
        {
            get
            {
                if ((this.mInvalidPasswordMethodExpectedValues == null))
                {
                    this.mInvalidPasswordMethodExpectedValues = new InvalidPasswordMethodExpectedValues();
                }
                return this.mInvalidPasswordMethodExpectedValues;
            }
        }
        
        public virtual Invalid_Password_MethodParams Invalid_Password_MethodParams
        {
            get
            {
                if ((this.mInvalid_Password_MethodParams == null))
                {
                    this.mInvalid_Password_MethodParams = new Invalid_Password_MethodParams();
                }
                return this.mInvalid_Password_MethodParams;
            }
        }
        
        public virtual RecordedInvalidUsernameParams RecordedInvalidUsernameParams
        {
            get
            {
                if ((this.mRecordedInvalidUsernameParams == null))
                {
                    this.mRecordedInvalidUsernameParams = new RecordedInvalidUsernameParams();
                }
                return this.mRecordedInvalidUsernameParams;
            }
        }
        
        public virtual RecordedCodedUI_UsernameMissingAtSymbolMethodParams RecordedCodedUI_UsernameMissingAtSymbolMethodParams
        {
            get
            {
                if ((this.mRecordedCodedUI_UsernameMissingAtSymbolMethodParams == null))
                {
                    this.mRecordedCodedUI_UsernameMissingAtSymbolMethodParams = new RecordedCodedUI_UsernameMissingAtSymbolMethodParams();
                }
                return this.mRecordedCodedUI_UsernameMissingAtSymbolMethodParams;
            }
        }
        
        public virtual AssertCorrectErrorMessageDisplayedMethodExpectedValues AssertCorrectErrorMessageDisplayedMethodExpectedValues
        {
            get
            {
                if ((this.mAssertCorrectErrorMessageDisplayedMethodExpectedValues == null))
                {
                    this.mAssertCorrectErrorMessageDisplayedMethodExpectedValues = new AssertCorrectErrorMessageDisplayedMethodExpectedValues();
                }
                return this.mAssertCorrectErrorMessageDisplayedMethodExpectedValues;
            }
        }
        
        public UIWorkingInternetExploWindow UIWorkingInternetExploWindow
        {
            get
            {
                if ((this.mUIWorkingInternetExploWindow == null))
                {
                    this.mUIWorkingInternetExploWindow = new UIWorkingInternetExploWindow();
                }
                return this.mUIWorkingInternetExploWindow;
            }
        }
        
        public UIGoogleInternetExplorWindow UIGoogleInternetExplorWindow
        {
            get
            {
                if ((this.mUIGoogleInternetExplorWindow == null))
                {
                    this.mUIGoogleInternetExplorWindow = new UIGoogleInternetExplorWindow();
                }
                return this.mUIGoogleInternetExplorWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow1();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIInternetOptionsWindow UIInternetOptionsWindow
        {
            get
            {
                if ((this.mUIInternetOptionsWindow == null))
                {
                    this.mUIInternetOptionsWindow = new UIInternetOptionsWindow();
                }
                return this.mUIInternetOptionsWindow;
            }
        }
        
        public UIDeleteBrowsingHistorWindow UIDeleteBrowsingHistorWindow
        {
            get
            {
                if ((this.mUIDeleteBrowsingHistorWindow == null))
                {
                    this.mUIDeleteBrowsingHistorWindow = new UIDeleteBrowsingHistorWindow();
                }
                return this.mUIDeleteBrowsingHistorWindow;
            }
        }
        
        public UIGoogleInternetExplorWindow1 UIGoogleInternetExplorWindow1
        {
            get
            {
                if ((this.mUIGoogleInternetExplorWindow1 == null))
                {
                    this.mUIGoogleInternetExplorWindow1 = new UIGoogleInternetExplorWindow1();
                }
                return this.mUIGoogleInternetExplorWindow1;
            }
        }
        
        public UIGoogleInternetExplorWindow2 UIGoogleInternetExplorWindow2
        {
            get
            {
                if ((this.mUIGoogleInternetExplorWindow2 == null))
                {
                    this.mUIGoogleInternetExplorWindow2 = new UIGoogleInternetExplorWindow2();
                }
                return this.mUIGoogleInternetExplorWindow2;
            }
        }
        
        public UIGoogleInternetExplorWindow3 UIGoogleInternetExplorWindow3
        {
            get
            {
                if ((this.mUIGoogleInternetExplorWindow3 == null))
                {
                    this.mUIGoogleInternetExplorWindow3 = new UIGoogleInternetExplorWindow3();
                }
                return this.mUIGoogleInternetExplorWindow3;
            }
        }
        
        public UIGoogleInternetExplorWindow4 UIGoogleInternetExplorWindow4
        {
            get
            {
                if ((this.mUIGoogleInternetExplorWindow4 == null))
                {
                    this.mUIGoogleInternetExplorWindow4 = new UIGoogleInternetExplorWindow4();
                }
                return this.mUIGoogleInternetExplorWindow4;
            }
        }
        
        public UIGoogleInternetExplorWindow5 UIGoogleInternetExplorWindow5
        {
            get
            {
                if ((this.mUIGoogleInternetExplorWindow5 == null))
                {
                    this.mUIGoogleInternetExplorWindow5 = new UIGoogleInternetExplorWindow5();
                }
                return this.mUIGoogleInternetExplorWindow5;
            }
        }
        
        public UIGoogleInternetExplorWindow6 UIGoogleInternetExplorWindow6
        {
            get
            {
                if ((this.mUIGoogleInternetExplorWindow6 == null))
                {
                    this.mUIGoogleInternetExplorWindow6 = new UIGoogleInternetExplorWindow6();
                }
                return this.mUIGoogleInternetExplorWindow6;
            }
        }
        
        public UIGoogleInternetExplorWindow7 UIGoogleInternetExplorWindow7
        {
            get
            {
                if ((this.mUIGoogleInternetExplorWindow7 == null))
                {
                    this.mUIGoogleInternetExplorWindow7 = new UIGoogleInternetExplorWindow7();
                }
                return this.mUIGoogleInternetExplorWindow7;
            }
        }
        
        public UIGoogleInternetExplorWindow8 UIGoogleInternetExplorWindow8
        {
            get
            {
                if ((this.mUIGoogleInternetExplorWindow8 == null))
                {
                    this.mUIGoogleInternetExplorWindow8 = new UIGoogleInternetExplorWindow8();
                }
                return this.mUIGoogleInternetExplorWindow8;
            }
        }
        
        public UIGoogleInternetExplorWindow9 UIGoogleInternetExplorWindow9
        {
            get
            {
                if ((this.mUIGoogleInternetExplorWindow9 == null))
                {
                    this.mUIGoogleInternetExplorWindow9 = new UIGoogleInternetExplorWindow9();
                }
                return this.mUIGoogleInternetExplorWindow9;
            }
        }
        
        public UIGoogleInternetExplorWindow10 UIGoogleInternetExplorWindow10
        {
            get
            {
                if ((this.mUIGoogleInternetExplorWindow10 == null))
                {
                    this.mUIGoogleInternetExplorWindow10 = new UIGoogleInternetExplorWindow10();
                }
                return this.mUIGoogleInternetExplorWindow10;
            }
        }
        
        public UIGoogleInternetExplorWindow11 UIGoogleInternetExplorWindow11
        {
            get
            {
                if ((this.mUIGoogleInternetExplorWindow11 == null))
                {
                    this.mUIGoogleInternetExplorWindow11 = new UIGoogleInternetExplorWindow11();
                }
                return this.mUIGoogleInternetExplorWindow11;
            }
        }
        
        public UIGoogleInternetExplorWindow12 UIGoogleInternetExplorWindow12
        {
            get
            {
                if ((this.mUIGoogleInternetExplorWindow12 == null))
                {
                    this.mUIGoogleInternetExplorWindow12 = new UIGoogleInternetExplorWindow12();
                }
                return this.mUIGoogleInternetExplorWindow12;
            }
        }
        
        public UIGoogleInternetExplorWindow13 UIGoogleInternetExplorWindow13
        {
            get
            {
                if ((this.mUIGoogleInternetExplorWindow13 == null))
                {
                    this.mUIGoogleInternetExplorWindow13 = new UIGoogleInternetExplorWindow13();
                }
                return this.mUIGoogleInternetExplorWindow13;
            }
        }
        
        public UIGoogleInternetExplorWindow14 UIGoogleInternetExplorWindow14
        {
            get
            {
                if ((this.mUIGoogleInternetExplorWindow14 == null))
                {
                    this.mUIGoogleInternetExplorWindow14 = new UIGoogleInternetExplorWindow14();
                }
                return this.mUIGoogleInternetExplorWindow14;
            }
        }
        
        public UIGoogleInternetExplorWindow15 UIGoogleInternetExplorWindow15
        {
            get
            {
                if ((this.mUIGoogleInternetExplorWindow15 == null))
                {
                    this.mUIGoogleInternetExplorWindow15 = new UIGoogleInternetExplorWindow15();
                }
                return this.mUIGoogleInternetExplorWindow15;
            }
        }
        
        public UIGoogleInternetExplorWindow16 UIGoogleInternetExplorWindow16
        {
            get
            {
                if ((this.mUIGoogleInternetExplorWindow16 == null))
                {
                    this.mUIGoogleInternetExplorWindow16 = new UIGoogleInternetExplorWindow16();
                }
                return this.mUIGoogleInternetExplorWindow16;
            }
        }
        
        public UIGoogleInternetExplorWindow17 UIGoogleInternetExplorWindow17
        {
            get
            {
                if ((this.mUIGoogleInternetExplorWindow17 == null))
                {
                    this.mUIGoogleInternetExplorWindow17 = new UIGoogleInternetExplorWindow17();
                }
                return this.mUIGoogleInternetExplorWindow17;
            }
        }
        
        public UIGoogleInternetExplorWindow18 UIGoogleInternetExplorWindow18
        {
            get
            {
                if ((this.mUIGoogleInternetExplorWindow18 == null))
                {
                    this.mUIGoogleInternetExplorWindow18 = new UIGoogleInternetExplorWindow18();
                }
                return this.mUIGoogleInternetExplorWindow18;
            }
        }
        
        public UIGoogleInternetExplorWindow19 UIGoogleInternetExplorWindow19
        {
            get
            {
                if ((this.mUIGoogleInternetExplorWindow19 == null))
                {
                    this.mUIGoogleInternetExplorWindow19 = new UIGoogleInternetExplorWindow19();
                }
                return this.mUIGoogleInternetExplorWindow19;
            }
        }
        
        public UIGoogleInternetExplorWindow20 UIGoogleInternetExplorWindow20
        {
            get
            {
                if ((this.mUIGoogleInternetExplorWindow20 == null))
                {
                    this.mUIGoogleInternetExplorWindow20 = new UIGoogleInternetExplorWindow20();
                }
                return this.mUIGoogleInternetExplorWindow20;
            }
        }
        
        public UIGoogleInternetExplorWindow21 UIGoogleInternetExplorWindow21
        {
            get
            {
                if ((this.mUIGoogleInternetExplorWindow21 == null))
                {
                    this.mUIGoogleInternetExplorWindow21 = new UIGoogleInternetExplorWindow21();
                }
                return this.mUIGoogleInternetExplorWindow21;
            }
        }
        
        public UIGoogleInternetExplorWindow22 UIGoogleInternetExplorWindow22
        {
            get
            {
                if ((this.mUIGoogleInternetExplorWindow22 == null))
                {
                    this.mUIGoogleInternetExplorWindow22 = new UIGoogleInternetExplorWindow22();
                }
                return this.mUIGoogleInternetExplorWindow22;
            }
        }
        
        public UIGoogleInternetExplorWindow23 UIGoogleInternetExplorWindow23
        {
            get
            {
                if ((this.mUIGoogleInternetExplorWindow23 == null))
                {
                    this.mUIGoogleInternetExplorWindow23 = new UIGoogleInternetExplorWindow23();
                }
                return this.mUIGoogleInternetExplorWindow23;
            }
        }
        
        public UIGoogleInternetExplorWindow24 UIGoogleInternetExplorWindow24
        {
            get
            {
                if ((this.mUIGoogleInternetExplorWindow24 == null))
                {
                    this.mUIGoogleInternetExplorWindow24 = new UIGoogleInternetExplorWindow24();
                }
                return this.mUIGoogleInternetExplorWindow24;
            }
        }
        
        public UIGoogleInternetExplorWindow25 UIGoogleInternetExplorWindow25
        {
            get
            {
                if ((this.mUIGoogleInternetExplorWindow25 == null))
                {
                    this.mUIGoogleInternetExplorWindow25 = new UIGoogleInternetExplorWindow25();
                }
                return this.mUIGoogleInternetExplorWindow25;
            }
        }
        
        public UIGoogleInternetExplorWindow26 UIGoogleInternetExplorWindow26
        {
            get
            {
                if ((this.mUIGoogleInternetExplorWindow26 == null))
                {
                    this.mUIGoogleInternetExplorWindow26 = new UIGoogleInternetExplorWindow26();
                }
                return this.mUIGoogleInternetExplorWindow26;
            }
        }
        
        public UIGoogleInternetExplorWindow27 UIGoogleInternetExplorWindow27
        {
            get
            {
                if ((this.mUIGoogleInternetExplorWindow27 == null))
                {
                    this.mUIGoogleInternetExplorWindow27 = new UIGoogleInternetExplorWindow27();
                }
                return this.mUIGoogleInternetExplorWindow27;
            }
        }
        
        public UIGoogleInternetExplorWindow28 UIGoogleInternetExplorWindow28
        {
            get
            {
                if ((this.mUIGoogleInternetExplorWindow28 == null))
                {
                    this.mUIGoogleInternetExplorWindow28 = new UIGoogleInternetExplorWindow28();
                }
                return this.mUIGoogleInternetExplorWindow28;
            }
        }
        
        public UIGoogleInternetExplorWindow29 UIGoogleInternetExplorWindow29
        {
            get
            {
                if ((this.mUIGoogleInternetExplorWindow29 == null))
                {
                    this.mUIGoogleInternetExplorWindow29 = new UIGoogleInternetExplorWindow29();
                }
                return this.mUIGoogleInternetExplorWindow29;
            }
        }
        
        public UIGoogleInternetExplorWindow30 UIGoogleInternetExplorWindow30
        {
            get
            {
                if ((this.mUIGoogleInternetExplorWindow30 == null))
                {
                    this.mUIGoogleInternetExplorWindow30 = new UIGoogleInternetExplorWindow30();
                }
                return this.mUIGoogleInternetExplorWindow30;
            }
        }
        #endregion
        
        #region Fields
        private ValidLoginCodeUITestParams mValidLoginCodeUITestParams;
        
        private ClickLoginMethodParams mClickLoginMethodParams;
        
        private ClearHistoryMethodParams mClearHistoryMethodParams;
        
        private FooMethodExpectedValues mFooMethodExpectedValues;
        
        private ClickLoginAfterClearHistoryMethodParams mClickLoginAfterClearHistoryMethodParams;
        
        private IEAlreadyOpen1Params mIEAlreadyOpen1Params;
        
        private InvalidUsername_Password_MethodParams mInvalidUsername_Password_MethodParams;
        
        private Valid_Username_Invalid_Password_MethodParams mValid_Username_Invalid_Password_MethodParams;
        
        private InvalidPasswordMethodExpectedValues mInvalidPasswordMethodExpectedValues;
        
        private Invalid_Password_MethodParams mInvalid_Password_MethodParams;
        
        private RecordedInvalidUsernameParams mRecordedInvalidUsernameParams;
        
        private RecordedCodedUI_UsernameMissingAtSymbolMethodParams mRecordedCodedUI_UsernameMissingAtSymbolMethodParams;
        
        private AssertCorrectErrorMessageDisplayedMethodExpectedValues mAssertCorrectErrorMessageDisplayedMethodExpectedValues;
        
        private UIWorkingInternetExploWindow mUIWorkingInternetExploWindow;
        
        private UIGoogleInternetExplorWindow mUIGoogleInternetExplorWindow;
        
        private UIItemWindow1 mUIItemWindow;
        
        private UIInternetOptionsWindow mUIInternetOptionsWindow;
        
        private UIDeleteBrowsingHistorWindow mUIDeleteBrowsingHistorWindow;
        
        private UIGoogleInternetExplorWindow1 mUIGoogleInternetExplorWindow1;
        
        private UIGoogleInternetExplorWindow2 mUIGoogleInternetExplorWindow2;
        
        private UIGoogleInternetExplorWindow3 mUIGoogleInternetExplorWindow3;
        
        private UIGoogleInternetExplorWindow4 mUIGoogleInternetExplorWindow4;
        
        private UIGoogleInternetExplorWindow5 mUIGoogleInternetExplorWindow5;
        
        private UIGoogleInternetExplorWindow6 mUIGoogleInternetExplorWindow6;
        
        private UIGoogleInternetExplorWindow7 mUIGoogleInternetExplorWindow7;
        
        private UIGoogleInternetExplorWindow8 mUIGoogleInternetExplorWindow8;
        
        private UIGoogleInternetExplorWindow9 mUIGoogleInternetExplorWindow9;
        
        private UIGoogleInternetExplorWindow10 mUIGoogleInternetExplorWindow10;
        
        private UIGoogleInternetExplorWindow11 mUIGoogleInternetExplorWindow11;
        
        private UIGoogleInternetExplorWindow12 mUIGoogleInternetExplorWindow12;
        
        private UIGoogleInternetExplorWindow13 mUIGoogleInternetExplorWindow13;
        
        private UIGoogleInternetExplorWindow14 mUIGoogleInternetExplorWindow14;
        
        private UIGoogleInternetExplorWindow15 mUIGoogleInternetExplorWindow15;
        
        private UIGoogleInternetExplorWindow16 mUIGoogleInternetExplorWindow16;
        
        private UIGoogleInternetExplorWindow17 mUIGoogleInternetExplorWindow17;
        
        private UIGoogleInternetExplorWindow18 mUIGoogleInternetExplorWindow18;
        
        private UIGoogleInternetExplorWindow19 mUIGoogleInternetExplorWindow19;
        
        private UIGoogleInternetExplorWindow20 mUIGoogleInternetExplorWindow20;
        
        private UIGoogleInternetExplorWindow21 mUIGoogleInternetExplorWindow21;
        
        private UIGoogleInternetExplorWindow22 mUIGoogleInternetExplorWindow22;
        
        private UIGoogleInternetExplorWindow23 mUIGoogleInternetExplorWindow23;
        
        private UIGoogleInternetExplorWindow24 mUIGoogleInternetExplorWindow24;
        
        private UIGoogleInternetExplorWindow25 mUIGoogleInternetExplorWindow25;
        
        private UIGoogleInternetExplorWindow26 mUIGoogleInternetExplorWindow26;
        
        private UIGoogleInternetExplorWindow27 mUIGoogleInternetExplorWindow27;
        
        private UIGoogleInternetExplorWindow28 mUIGoogleInternetExplorWindow28;
        
        private UIGoogleInternetExplorWindow29 mUIGoogleInternetExplorWindow29;
        
        private UIGoogleInternetExplorWindow30 mUIGoogleInternetExplorWindow30;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ValidLoginCodeUITest'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class ValidLoginCodeUITestParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://qa.company.com/' using new browser instance
        /// </summary>
        public string UIWorkingInternetExploWindowUrl = "http://qa.company.com/";
        
        /// <summary>
        /// Type 'user1@company.com' in 'Email' text box
        /// </summary>
        public string UIEmailEditText = "user1@company.com";
        
        /// <summary>
        /// Type '{Tab}' in 'Email' text box
        /// </summary>
        public string UIEmailEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditPassword = "mBQq9cL71wNqdUFlzScttqVjjIlghGPw+ED9kXC/UuI=";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ClickLoginMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class ClickLoginMethodParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://qa.company.com/' using new browser instance
        /// </summary>
        public string UIWorkingInternetExploWindowUrl = "http://qa.company.com/";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ClearHistoryMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class ClearHistoryMethodParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://google.com/' using new browser instance
        /// </summary>
        public string UIGoogleInternetExplorWindowUrl = "http://google.com/";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'FooMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class FooMethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlType' property of 'Notification' tool bar equals 'ToolBar'
        /// </summary>
        public string UINotificationToolBarControlType = "ToolBar";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'ClickLoginAfterClearHistoryMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class ClickLoginAfterClearHistoryMethodParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://google.com/' using new browser instance
        /// </summary>
        public string UIGoogleInternetExplorWindowUrl = "http://google.com/";
        
        /// <summary>
        /// Go to web page 'http://qa.company.com/'
        /// </summary>
        public string UIGoogleInternetExplorWindowUrl1 = "http://qa.company.com/";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'IEAlreadyOpen1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class IEAlreadyOpen1Params
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://qa.company.com/'
        /// </summary>
        public string UIGoogleInternetExplorWindow1Url = "http://qa.company.com/";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'InvalidUsername_Password_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class InvalidUsername_Password_MethodParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://google.com/' using new browser instance
        /// </summary>
        public string UIGoogleInternetExplorWindow3Url = "http://google.com/";
        
        /// <summary>
        /// Go to web page 'http://qa.company.com/'
        /// </summary>
        public string UIGoogleInternetExplorWindow4Url = "http://qa.company.com/";
        
        /// <summary>
        /// Type 'foo@com' in 'Email' text box
        /// </summary>
        public string UIEmailEditText = "foo@com";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditPassword = "hJmezFzqDcuK4+02dHXSggshWmuWwMgn/tg6S5p0tF0=";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Valid_Username_Invalid_Password_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class Valid_Username_Invalid_Password_MethodParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://google.com/' using new browser instance
        /// </summary>
        public string UIGoogleInternetExplorWindow7Url = "http://google.com/";
        
        /// <summary>
        /// Type 'qa.company.com' in 'Address and search using Bing' text box
        /// </summary>
        public string UIAddressandsearchusinEditText = "qa.company.com";
        
        /// <summary>
        /// Go to web page 'http://qa.company.com/'
        /// </summary>
        public string UIGoogleInternetExplorWindow9Url = "http://qa.company.com/";
        
        /// <summary>
        /// Type 'user1@company.com' in 'Email' text box
        /// </summary>
        public string UIEmailEditText = "user1@company.com";
        
        /// <summary>
        /// Type '{Tab}' in 'Email' text box
        /// </summary>
        public string UIEmailEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditPassword = "HMCcwrugDTYSiTEH1ohDJQ==";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'InvalidPasswordMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class InvalidPasswordMethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'TagName' property of 'Error Invalid username or password' pane equals 'DIV'
        /// </summary>
        public string UIErrorInvalidusernamePaneTagName = "DIV";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Invalid_Password_Method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class Invalid_Password_MethodParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://google.com/' using new browser instance
        /// </summary>
        public string UIGoogleInternetExplorWindow17Url = "http://google.com/";
        
        /// <summary>
        /// Go to web page 'http://qa.company.com/'
        /// </summary>
        public string UIGoogleInternetExplorWindow18Url = "http://qa.company.com/";
        
        /// <summary>
        /// Type 'user1@company.com' in 'Email' text box
        /// </summary>
        public string UIEmailEditText = "user1@company.com";
        
        /// <summary>
        /// Type '{Tab}' in 'Email' text box
        /// </summary>
        public string UIEmailEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditPassword = "dra3EOuG4BEKhtP0xKGYIIriYAa7wEU4";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedInvalidUsername'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RecordedInvalidUsernameParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://google.com/' using new browser instance
        /// </summary>
        public string UIGoogleInternetExplorWindow21Url = "http://google.com/";
        
        /// <summary>
        /// Go to web page 'http://qa.company.com/'
        /// </summary>
        public string UIGoogleInternetExplorWindow23Url = "http://qa.company.com/";
        
        /// <summary>
        /// Type 'foo' in 'Email' text box
        /// </summary>
        public string UIEmailEditText = "foo";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditPassword = "mBQq9cL71wNqdUFlzScttqVjjIlghGPw+ED9kXC/UuI=";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedCodedUI_UsernameMissingAtSymbolMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RecordedCodedUI_UsernameMissingAtSymbolMethodParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://google.com/' using new browser instance
        /// </summary>
        public string UIGoogleInternetExplorWindow26Url = "http://google.com/";
        
        /// <summary>
        /// Go to web page 'http://qa.company.com/'
        /// </summary>
        public string UIGoogleInternetExplorWindow27Url = "http://qa.company.com/";
        
        /// <summary>
        /// Type 'user1company.com' in 'Email' text box; note the missing @ symbol
        /// </summary>
        public string UIEmailEditText = "user1company.com";
        
        /// <summary>
        /// Type '********' in 'Password' text box
        /// </summary>
        public string UIPasswordEditPassword = "mBQq9cL71wNqdUFlzScttqVjjIlghGPw+ED9kXC/UuI=";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertCorrectErrorMessageDisplayedMethod'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AssertCorrectErrorMessageDisplayedMethodExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'TagName' property of 'Error Invalid username or password' pane equals 'DIV'
        /// </summary>
        public string UIErrorInvalidusernamePaneTagName = "DIV";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIWorkingInternetExploWindow : BrowserWindow
    {
        
        public UIWorkingInternetExploWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Working...";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Working...");
            this.WindowTitles.Add("Home - Home");
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            this.WindowTitles.Add("My Company");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIASPNETCore10AngularIDocument UIASPNETCore10AngularIDocument
        {
            get
            {
                if ((this.mUIASPNETCore10AngularIDocument == null))
                {
                    this.mUIASPNETCore10AngularIDocument = new UIASPNETCore10AngularIDocument(this);
                }
                return this.mUIASPNETCore10AngularIDocument;
            }
        }
        
        public UIMyCompanyDocument UIMyCompanyDocument
        {
            get
            {
                if ((this.mUIMyCompanyDocument == null))
                {
                    this.mUIMyCompanyDocument = new UIMyCompanyDocument(this);
                }
                return this.mUIMyCompanyDocument;
            }
        }
        
        public UIASPNETCore10AngularIDocument1 UIASPNETCore10AngularIDocument1
        {
            get
            {
                if ((this.mUIASPNETCore10AngularIDocument1 == null))
                {
                    this.mUIASPNETCore10AngularIDocument1 = new UIASPNETCore10AngularIDocument1(this);
                }
                return this.mUIASPNETCore10AngularIDocument1;
            }
        }
        
        public UIMyCompanyDocument1 UIMyCompanyDocument1
        {
            get
            {
                if ((this.mUIMyCompanyDocument1 == null))
                {
                    this.mUIMyCompanyDocument1 = new UIMyCompanyDocument1(this);
                }
                return this.mUIMyCompanyDocument1;
            }
        }
        #endregion
        
        #region Fields
        private UIASPNETCore10AngularIDocument mUIASPNETCore10AngularIDocument;
        
        private UIMyCompanyDocument mUIMyCompanyDocument;
        
        private UIASPNETCore10AngularIDocument1 mUIASPNETCore10AngularIDocument1;
        
        private UIMyCompanyDocument1 mUIMyCompanyDocument1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIASPNETCore10AngularIDocument : HtmlDocument
    {
        
        public UIASPNETCore10AngularIDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "ASP.NET Core 1.0 Angular IdentityServer4 Client";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://qa.company.com/";
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            #endregion
        }
        
        #region Properties
        public UIContactInfoLoginPane UIContactInfoLoginPane
        {
            get
            {
                if ((this.mUIContactInfoLoginPane == null))
                {
                    this.mUIContactInfoLoginPane = new UIContactInfoLoginPane(this);
                }
                return this.mUIContactInfoLoginPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContactInfoLoginPane mUIContactInfoLoginPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIContactInfoLoginPane : HtmlDiv
    {
        
        public UIContactInfoLoginPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "navbar";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Contact Info\r\n\r\n  \r\nLogin\r\n\r\n \r\n \r\n  ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "navbar-collapse collapse";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"navbar-collapse collapse\" id=\"navbar\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties["TagName"] = "A";
                    this.mUIItemCustom.SearchProperties["Id"] = null;
                    this.mUIItemCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItemCustom.FilterProperties["Class"] = "navigationLinkButton";
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = "class=\"navigationLinkButton\"";
                    this.mUIItemCustom.FilterProperties["TagInstance"] = "2";
                    this.mUIItemCustom.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMyCompanyDocument : HtmlDocument
    {
        
        public UIMyCompanyDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "My Company";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/account/login";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = @"http://qa.companyapi.com:5000/account/login?returnUrl=%2Fconnect%2Fauthorize%2Flogin%3Fclient_id%3Dangularclient%26redirect_uri%3Dhttp%253A%252F%252Fqa.company.com%26response_type%3Did_token%2520token%26scope%3Dopenid%2520profile%2520role%2520accountapi%26nonce%3DN0.50944659067286581505493146805";
            this.WindowTitles.Add("My Company");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIEmailEdit
        {
            get
            {
                if ((this.mUIEmailEdit == null))
                {
                    this.mUIEmailEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Email";
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Email";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Email\" class=\"form-control\" id=\"Em";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIEmailEdit.WindowTitles.Add("My Company");
                    #endregion
                }
                return this.mUIEmailEdit;
            }
        }
        
        public HtmlDiv UIUsernamePane
        {
            get
            {
                if ((this.mUIUsernamePane == null))
                {
                    this.mUIUsernamePane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIUsernamePane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIUsernamePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIUsernamePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Username ";
                    this.mUIUsernamePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIUsernamePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "form-group";
                    this.mUIUsernamePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"form-group\"";
                    this.mUIUsernamePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "12";
                    this.mUIUsernamePane.WindowTitles.Add("My Company");
                    #endregion
                }
                return this.mUIUsernamePane;
            }
        }
        
        public HtmlEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Password";
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Password\" class=\"form-control\" id=";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "3";
                    this.mUIPasswordEdit.WindowTitles.Add("My Company");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties["TagName"] = "FIELDSET";
                    this.mUIItemCustom.SearchProperties["Id"] = null;
                    this.mUIItemCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItemCustom.FilterProperties["Class"] = null;
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = null;
                    this.mUIItemCustom.FilterProperties["TagInstance"] = "1";
                    this.mUIItemCustom.WindowTitles.Add("My Company");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        
        public HtmlButton UILoginButton
        {
            get
            {
                if ((this.mUILoginButton == null))
                {
                    this.mUILoginButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Login";
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-primary";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-primary\"";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "2";
                    this.mUILoginButton.WindowTitles.Add("My Company");
                    #endregion
                }
                return this.mUILoginButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIEmailEdit;
        
        private HtmlDiv mUIUsernamePane;
        
        private HtmlEdit mUIPasswordEdit;
        
        private HtmlCustom mUIItemCustom;
        
        private HtmlButton mUILoginButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIASPNETCore10AngularIDocument1 : HtmlDocument
    {
        
        public UIASPNETCore10AngularIDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "ASP.NET Core 1.0 Angular IdentityServer4 Client";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://qa.company.com/#id_token=eyJhbGciOiJSUzI1NiIsImtpZCI6ImJmYzkzNmYyZTY3YzdhMzg5Z" +
                "jM4YmY5Y2QwMjMzNzQ3IiwidHlwIjoiSldUIn0.eyJuYmYiOjE1MDU0OTMxMzcsImV4cCI6MTUwNTQ5M" +
                "zQzNywiaXNzIjoiaHR0cDovL3FhLm1oc2FwaS5jb206NTAwMCIsImF1ZCI6ImFuZ3VsYXJjbGllbnQiL" +
                "CJub25jZSI6Ik4wLjUwOTQ0NjU5MDY3Mjg2NTgxNTA1NDkzMTQ2ODA1IiwiaWF0IjoxNTA1NDkzMTM3L" +
                "CJhdF9oYXNoIjoicUdlYUhqQm5jd1FBWmFvSHg3YnVIZyIsInNpZCI6ImYwOGIyMjY0ZTcwNGRhOTE2Y" +
                "TMzYjJjMmI5ZTVjNWM0Iiwic3ViIjoiMSIsImF1dGhfdGltZSI6MTUwNTQ5MzEzNywiaWRwIjoibG9jY" +
                "WwiLCJhbXIiOlsicHdkIl19.CE3i9AyJ3xFPTa_huk43N3ZnNLC6aJXGR7J3pMD03T9pJ6YkWe5NENZ-" +
                "_-OoPQ_uo7gT_Nm-hOWngzQl3o8SUl3_x3zpLf2B90Ia5MXbI4YWGG82QoQtRjxgBIO_vOPQAi_GaQ83" +
                "JjMfJmPE-u6aX_Nc09Qjt9S37FbVDoecUz57IiH8isC3fyJXlF5n7STBVIE5aiRHhf4ESImmxV93iHwR" +
                "1OHyUFvec53bLUGHyBmwaOF9O9cUI04pdxEUUGCMkjrlqMbBsMLjDG5u-4Z-NSkuh6y_0cVwbke9x_x9" +
                "7LE1C0wDq7IrVnRe-T-A5ICMvfFCARyAJbsZsQ5jvW7ZOA&access_token=eyJhbGciOiJSUzI1NiIs" +
                "ImtpZCI6ImJmYzkzNmYyZTY3YzdhMzg5ZjM4YmY5Y2QwMjMzNzQ3IiwidHlwIjoiSldUIn0.eyJuYmYi" +
                "OjE1MDU0OTMxMzcsImV4cCI6MTUwNTQ5NjczNywiaXNzIjoiaHR0cDovL3FhLm1oc2FwaS5jb206NTAw" +
                "MCIsImF1ZCI6WyJodHRwOi8vcWEubWhzYXBpLmNvbTo1MDAwL3Jlc291cmNlcyIsImFjY291bnRhcGki" +
                "XSwiY2xpZW50X2lkIjoiYW5ndWxhcmNsaWVudCIsInN1YiI6IjEiLCJhdXRoX3RpbWUiOjE1MDU0OTMx" +
                "MzcsImlkcCI6ImxvY2FsIiwicm9sZSI6ImFkbWluIiwic2NvcGUiOlsib3BlbmlkIiwicHJvZmlsZSIs" +
                "InJvbGUiLCJhY2NvdW50YXBpIl0sImFtciI6WyJwd2QiXX0.d0AYndSB82RpCu7tITcDMR6FS3NhRAxb" +
                "kQden4WRey_hvms46tb1EDqKQwgtj9J2VyW9tRsL9FuPj24TsZ_zynzukDqLHAzXXh1H6BBHfpPiHZZy" +
                "k63YU9httRbulWS8AV3SOaz3fwjXZKzmEVz0GzNl8R3IudIIPnJS2s_SX-ev8oJkFOakH-DhODL4ft86" +
                "r4Zol-uA3PnJ8rJm1-MS5_krWbq95XIAMYqALPVpCnYJ0bd9f3tzRgdDoSAtmmAyJymHJUFI-FQxm_Av" +
                "HQiuc7z9voQKDHhedrdbsOiYeVkSrhnQrsgnZxYJxjz4y5pstKi-G6sP-_4nCByD3oBhNA&token_typ" +
                "e=Bearer&expires_in=3600&scope=openid%20profile%20role%20accountapi&session_stat" +
                "e=I7rPA4QzD2HYzHEPILCnLUkA-_DNo6tc9DxN8ynCDhQ.b90be780ae26f758fb1f96c4be15e458";
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            #endregion
        }
        
        #region Properties
        public UIContactInfoLogoutPane UIContactInfoLogoutPane
        {
            get
            {
                if ((this.mUIContactInfoLogoutPane == null))
                {
                    this.mUIContactInfoLogoutPane = new UIContactInfoLogoutPane(this);
                }
                return this.mUIContactInfoLogoutPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContactInfoLogoutPane mUIContactInfoLogoutPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIContactInfoLogoutPane : HtmlDiv
    {
        
        public UIContactInfoLogoutPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "navbar";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Contact Info\r\n\r\n  \r\n \r\nLogout\r\n\r\n \r\n  ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "navbar-collapse collapse";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"navbar-collapse collapse\" id=\"navbar\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIContactInfoHyperlink
        {
            get
            {
                if ((this.mUIContactInfoHyperlink == null))
                {
                    this.mUIContactInfoHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIContactInfoHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIContactInfoHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIContactInfoHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIContactInfoHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Contact Info";
                    this.mUIContactInfoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = null;
                    this.mUIContactInfoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIContactInfoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "/./contactinfo/view";
                    this.mUIContactInfoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIContactInfoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/./contactinfo/view\"";
                    this.mUIContactInfoHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIContactInfoHyperlink.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
                    #endregion
                }
                return this.mUIContactInfoHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIContactInfoHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMyCompanyDocument1 : HtmlDocument
    {
        
        public UIMyCompanyDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "My Company";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/account/login";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = @"http://qa.companyapi.com/account/login?returnUrl=%2Fconnect%2Fauthorize%2Flogin%3Fclient_id%3Dangularclient%26redirect_uri%3Dhttp%253A%252F%252Fqa.company.com%26response_type%3Did_token%2520token%26scope%3Dopenid%2520profile%2520role%2520accountapi%26nonce%3DN0.63622640438398921505772920074";
            this.WindowTitles.Add("My Company");
            #endregion
        }
        
        #region Properties
        public HtmlButton UILoginButton
        {
            get
            {
                if ((this.mUILoginButton == null))
                {
                    this.mUILoginButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Login";
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-primary";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-primary\"";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "2";
                    this.mUILoginButton.WindowTitles.Add("My Company");
                    #endregion
                }
                return this.mUILoginButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlButton mUILoginButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGoogleInternetExplorWindow : BrowserWindow
    {
        
        public UIGoogleInternetExplorWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            this.WindowTitles.Add("My Company");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGoogleDocument UIGoogleDocument
        {
            get
            {
                if ((this.mUIGoogleDocument == null))
                {
                    this.mUIGoogleDocument = new UIGoogleDocument(this);
                }
                return this.mUIGoogleDocument;
            }
        }
        
        public UIFavoritesandToolsBarToolBar UIFavoritesandToolsBarToolBar
        {
            get
            {
                if ((this.mUIFavoritesandToolsBarToolBar == null))
                {
                    this.mUIFavoritesandToolsBarToolBar = new UIFavoritesandToolsBarToolBar(this);
                }
                return this.mUIFavoritesandToolsBarToolBar;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIASPNETCore10AngularIDocument2 UIASPNETCore10AngularIDocument
        {
            get
            {
                if ((this.mUIASPNETCore10AngularIDocument == null))
                {
                    this.mUIASPNETCore10AngularIDocument = new UIASPNETCore10AngularIDocument2(this);
                }
                return this.mUIASPNETCore10AngularIDocument;
            }
        }
        
        public UINotificationToolBar UINotificationToolBar
        {
            get
            {
                if ((this.mUINotificationToolBar == null))
                {
                    this.mUINotificationToolBar = new UINotificationToolBar(this);
                }
                return this.mUINotificationToolBar;
            }
        }
        
        public UIASPNETCore10AngularITitleBar UIASPNETCore10AngularITitleBar
        {
            get
            {
                if ((this.mUIASPNETCore10AngularITitleBar == null))
                {
                    this.mUIASPNETCore10AngularITitleBar = new UIASPNETCore10AngularITitleBar(this);
                }
                return this.mUIASPNETCore10AngularITitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIGoogleDocument mUIGoogleDocument;
        
        private UIFavoritesandToolsBarToolBar mUIFavoritesandToolsBarToolBar;
        
        private UIItemWindow mUIItemWindow;
        
        private UIASPNETCore10AngularIDocument2 mUIASPNETCore10AngularIDocument;
        
        private UINotificationToolBar mUINotificationToolBar;
        
        private UIASPNETCore10AngularITitleBar mUIASPNETCore10AngularITitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGoogleDocument : HtmlDocument
    {
        
        public UIGoogleDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "gsr";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Google";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "https://www.google.com/?gws_rd=ssl";
            this.WindowTitles.Add("Google");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UISigninHyperlink
        {
            get
            {
                if ((this.mUISigninHyperlink == null))
                {
                    this.mUISigninHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUISigninHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = "gb_70";
                    this.mUISigninHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUISigninHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = "_top";
                    this.mUISigninHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Sign in";
                    this.mUISigninHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/ServiceLogin";
                    this.mUISigninHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUISigninHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://accounts.google.com/ServiceLogin?hl=en&passive=true&continue=https://www." +
                        "google.com/%3Fgws_rd%3Dssl";
                    this.mUISigninHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "gb_Lf gb_Fa gb_yb";
                    this.mUISigninHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"gb_Lf gb_Fa gb_yb\" id=\"gb_70\" hre";
                    this.mUISigninHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "27";
                    this.mUISigninHyperlink.WindowTitles.Add("Google");
                    #endregion
                }
                return this.mUISigninHyperlink;
            }
        }
        
        public HtmlDiv UILgaPane
        {
            get
            {
                if ((this.mUILgaPane == null))
                {
                    this.mUILgaPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUILgaPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "lga";
                    this.mUILgaPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUILgaPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "._P7b{height:26px;opacity:0.8;position:a";
                    this.mUILgaPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUILgaPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUILgaPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"lga\" style=\"height: 233px; margin-top: 89px;\"";
                    this.mUILgaPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "154";
                    this.mUILgaPane.WindowTitles.Add("Google");
                    #endregion
                }
                return this.mUILgaPane;
            }
        }
        
        public HtmlDiv UIViewportPane
        {
            get
            {
                if ((this.mUIViewportPane == null))
                {
                    this.mUIViewportPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIViewportPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "viewport";
                    this.mUIViewportPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIViewportPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = ".y.yp{display:none}.y.yf,.y.ys{display:b";
                    this.mUIViewportPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIViewportPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "ctr-p";
                    this.mUIViewportPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"ctr-p\" id=\"viewport\"";
                    this.mUIViewportPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
                    this.mUIViewportPane.WindowTitles.Add("Google");
                    #endregion
                }
                return this.mUIViewportPane;
            }
        }
        
        public UIGbwaPane UIGbwaPane
        {
            get
            {
                if ((this.mUIGbwaPane == null))
                {
                    this.mUIGbwaPane = new UIGbwaPane(this);
                }
                return this.mUIGbwaPane;
            }
        }
        
        public HtmlEdit UISearchEdit
        {
            get
            {
                if ((this.mUISearchEdit == null))
                {
                    this.mUISearchEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUISearchEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "lst-ib";
                    this.mUISearchEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "q";
                    this.mUISearchEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUISearchEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUISearchEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = "Search";
                    this.mUISearchEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "gsfi";
                    this.mUISearchEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"q\" title=\"Search\" class=\"gsfi\" id=";
                    this.mUISearchEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUISearchEdit.WindowTitles.Add("Google");
                    #endregion
                }
                return this.mUISearchEdit;
            }
        }
        
        public UIHplogoPane UIHplogoPane
        {
            get
            {
                if ((this.mUIHplogoPane == null))
                {
                    this.mUIHplogoPane = new UIHplogoPane(this);
                }
                return this.mUIHplogoPane;
            }
        }
        
        public UIGbwPane UIGbwPane
        {
            get
            {
                if ((this.mUIGbwPane == null))
                {
                    this.mUIGbwPane = new UIGbwPane(this);
                }
                return this.mUIGbwPane;
            }
        }
        
        public HtmlDiv UIGBPane
        {
            get
            {
                if ((this.mUIGBPane == null))
                {
                    this.mUIGBPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIGBPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "gb";
                    this.mUIGBPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIGBPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Gmail\r\n\r\nImages\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nM";
                    this.mUIGBPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIGBPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "gb_T";
                    this.mUIGBPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"gb_T\" id=\"gb\"";
                    this.mUIGBPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "6";
                    this.mUIGBPane.WindowTitles.Add("Google");
                    #endregion
                }
                return this.mUIGBPane;
            }
        }
        
        public UIFbarPane UIFbarPane
        {
            get
            {
                if ((this.mUIFbarPane == null))
                {
                    this.mUIFbarPane = new UIFbarPane(this);
                }
                return this.mUIFbarPane;
            }
        }
        
        public HtmlEdit UISearchEdit1
        {
            get
            {
                if ((this.mUISearchEdit1 == null))
                {
                    this.mUISearchEdit1 = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUISearchEdit1.SearchProperties[HtmlEdit.PropertyNames.Id] = "lst-ib";
                    this.mUISearchEdit1.SearchProperties[HtmlEdit.PropertyNames.Name] = "q";
                    this.mUISearchEdit1.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUISearchEdit1.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUISearchEdit1.FilterProperties[HtmlEdit.PropertyNames.Title] = "Search";
                    this.mUISearchEdit1.FilterProperties[HtmlEdit.PropertyNames.Class] = "gsfi lst-d-f";
                    this.mUISearchEdit1.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"q\" title=\"Search\" class=\"gsfi lst-";
                    this.mUISearchEdit1.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUISearchEdit1.WindowTitles.Add("Google");
                    #endregion
                }
                return this.mUISearchEdit1;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUISigninHyperlink;
        
        private HtmlDiv mUILgaPane;
        
        private HtmlDiv mUIViewportPane;
        
        private UIGbwaPane mUIGbwaPane;
        
        private HtmlEdit mUISearchEdit;
        
        private UIHplogoPane mUIHplogoPane;
        
        private UIGbwPane mUIGbwPane;
        
        private HtmlDiv mUIGBPane;
        
        private UIFbarPane mUIFbarPane;
        
        private HtmlEdit mUISearchEdit1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGbwaPane : HtmlDiv
    {
        
        public UIGbwaPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "gbwa";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "My Account\r\n\r\n\r\n\r\n\r\nSearch\r\n\r\n\r\n\r\n\r\nMaps";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "gb_da gb_Zc gb_R";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"gb_da gb_Zc gb_R\" id=\"gbwa\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "15";
            this.WindowTitles.Add("Google");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIGoogleappsHyperlink
        {
            get
            {
                if ((this.mUIGoogleappsHyperlink == null))
                {
                    this.mUIGoogleappsHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIGoogleappsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIGoogleappsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIGoogleappsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIGoogleappsHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = null;
                    this.mUIGoogleappsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/intl/en/options/";
                    this.mUIGoogleappsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = "Google apps";
                    this.mUIGoogleappsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://www.google.com/intl/en/options/";
                    this.mUIGoogleappsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "gb_b gb_6b";
                    this.mUIGoogleappsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "tabindex=\"0\" title=\"Google apps\" class=\"";
                    this.mUIGoogleappsHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIGoogleappsHyperlink.WindowTitles.Add("Google");
                    #endregion
                }
                return this.mUIGoogleappsHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIGoogleappsHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIHplogoPane : HtmlDiv
    {
        
        public UIHplogoPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "hplogo";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "._P7b{height:26px;opacity:0.8;position:a";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"hplogo\" style=\"width: 546px; height: 200px; display: inline-block; position: " +
                "relative;\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "155";
            this.WindowTitles.Add("Google");
            #endregion
        }
        
        #region Properties
        public HtmlImage UISamuelJohnsons308thBImage
        {
            get
            {
                if ((this.mUISamuelJohnsons308thBImage == null))
                {
                    this.mUISamuelJohnsons308thBImage = new HtmlImage(this);
                    #region Search Criteria
                    this.mUISamuelJohnsons308thBImage.SearchProperties[HtmlImage.PropertyNames.Id] = null;
                    this.mUISamuelJohnsons308thBImage.SearchProperties[HtmlImage.PropertyNames.Name] = null;
                    this.mUISamuelJohnsons308thBImage.SearchProperties[HtmlImage.PropertyNames.Alt] = "Samuel Johnson\'s 308th Birthday";
                    this.mUISamuelJohnsons308thBImage.FilterProperties[HtmlImage.PropertyNames.AbsolutePath] = "/logos/doodles/2017/samuel-johnsons-308th-birthday-5999730113904640.2-law.gif";
                    this.mUISamuelJohnsons308thBImage.FilterProperties[HtmlImage.PropertyNames.Src] = "https://www.google.com/logos/doodles/2017/samuel-johnsons-308th-birthday-59997301" +
                        "13904640.2-law.gif";
                    this.mUISamuelJohnsons308thBImage.FilterProperties[HtmlImage.PropertyNames.LinkAbsolutePath] = "/search";
                    this.mUISamuelJohnsons308thBImage.FilterProperties[HtmlImage.PropertyNames.Href] = "https://www.google.com/search?site=&q=Samuel+Johnson&oi=ddle&ct=samuel-johnsons-3" +
                        "08th-birthday-5999730113904640&hl=en&sa=X&ved=0ahUKEwi7yMvp5a_WAhUN1WMKHS8hBIEQP" +
                        "QgG";
                    this.mUISamuelJohnsons308thBImage.FilterProperties[HtmlImage.PropertyNames.Class] = null;
                    this.mUISamuelJohnsons308thBImage.FilterProperties[HtmlImage.PropertyNames.ControlDefinition] = "width=\"546\" height=\"200\" title=\"Samuel J";
                    this.mUISamuelJohnsons308thBImage.FilterProperties[HtmlImage.PropertyNames.TagInstance] = "1";
                    this.mUISamuelJohnsons308thBImage.WindowTitles.Add("Google");
                    #endregion
                }
                return this.mUISamuelJohnsons308thBImage;
            }
        }
        #endregion
        
        #region Fields
        private HtmlImage mUISamuelJohnsons308thBImage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGbwPane : HtmlDiv
    {
        
        public UIGbwPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "gbw";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Gmail\r\n\r\nImages\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nM";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"gbw\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "7";
            this.WindowTitles.Add("Google");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIImagesHyperlink
        {
            get
            {
                if ((this.mUIImagesHyperlink == null))
                {
                    this.mUIImagesHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIImagesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIImagesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIImagesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIImagesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Images";
                    this.mUIImagesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/imghp";
                    this.mUIImagesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIImagesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://www.google.com/imghp?hl=en&tab=wi";
                    this.mUIImagesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = "gb_P";
                    this.mUIImagesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "class=\"gb_P\" href=\"https://www.google.co";
                    this.mUIImagesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIImagesHyperlink.WindowTitles.Add("Google");
                    #endregion
                }
                return this.mUIImagesHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIImagesHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFbarPane : HtmlDiv
    {
        
        public UIFbarPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "fbar";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Privacy Terms Settings \r\nSearch settings";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "_dQc _E2";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"_dQc _E2\" id=\"fbar\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "163";
            this.WindowTitles.Add("Google");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIPrivacyTermsSettingsPane
        {
            get
            {
                if ((this.mUIPrivacyTermsSettingsPane == null))
                {
                    this.mUIPrivacyTermsSettingsPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIPrivacyTermsSettingsPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIPrivacyTermsSettingsPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIPrivacyTermsSettingsPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Privacy Terms Settings \r\nSearch settings";
                    this.mUIPrivacyTermsSettingsPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIPrivacyTermsSettingsPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "fbar";
                    this.mUIPrivacyTermsSettingsPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"fbar\"";
                    this.mUIPrivacyTermsSettingsPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "164";
                    this.mUIPrivacyTermsSettingsPane.WindowTitles.Add("Google");
                    #endregion
                }
                return this.mUIPrivacyTermsSettingsPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIPrivacyTermsSettingsPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIFavoritesandToolsBarToolBar : WinToolBar
    {
        
        public UIFavoritesandToolsBarToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Favorites and Tools Bar";
            this.WindowTitles.Add("Google");
            #endregion
        }
        
        #region Properties
        public WinButton UIToolsButton
        {
            get
            {
                if ((this.mUIToolsButton == null))
                {
                    this.mUIToolsButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIToolsButton.SearchProperties[WinButton.PropertyNames.Name] = "Tools";
                    this.mUIToolsButton.WindowTitles.Add("Google");
                    #endregion
                }
                return this.mUIToolsButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIToolsButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Frame Notification Bar";
            this.WindowTitles.Add("Google");
            #endregion
        }
        
        #region Properties
        public UIGoogleInternetExplorClient UIGoogleInternetExplorClient
        {
            get
            {
                if ((this.mUIGoogleInternetExplorClient == null))
                {
                    this.mUIGoogleInternetExplorClient = new UIGoogleInternetExplorClient(this);
                }
                return this.mUIGoogleInternetExplorClient;
            }
        }
        #endregion
        
        #region Fields
        private UIGoogleInternetExplorClient mUIGoogleInternetExplorClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGoogleInternetExplorClient : WinClient
    {
        
        public UIGoogleInternetExplorClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Google");
            #endregion
        }
        
        #region Properties
        public WinToolBar UINotificationToolBar
        {
            get
            {
                if ((this.mUINotificationToolBar == null))
                {
                    this.mUINotificationToolBar = new WinToolBar(this);
                    #region Search Criteria
                    this.mUINotificationToolBar.SearchProperties[WinToolBar.PropertyNames.Name] = "Notification";
                    this.mUINotificationToolBar.WindowTitles.Add("Google");
                    #endregion
                }
                return this.mUINotificationToolBar;
            }
        }
        #endregion
        
        #region Fields
        private WinToolBar mUINotificationToolBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIASPNETCore10AngularIDocument2 : HtmlDocument
    {
        
        public UIASPNETCore10AngularIDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "ASP.NET Core 1.0 Angular IdentityServer4 Client";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://qa.company.com/";
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            #endregion
        }
        
        #region Properties
        public UIContactInfoLoginPane1 UIContactInfoLoginPane
        {
            get
            {
                if ((this.mUIContactInfoLoginPane == null))
                {
                    this.mUIContactInfoLoginPane = new UIContactInfoLoginPane1(this);
                }
                return this.mUIContactInfoLoginPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContactInfoLoginPane1 mUIContactInfoLoginPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIContactInfoLoginPane1 : HtmlDiv
    {
        
        public UIContactInfoLoginPane1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "navbar";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Contact Info\r\n\r\n  \r\nLogin\r\n\r\n \r\n \r\n  ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "navbar-collapse collapse";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"navbar-collapse collapse\" id=\"navbar\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties["TagName"] = "A";
                    this.mUIItemCustom.SearchProperties["Id"] = null;
                    this.mUIItemCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItemCustom.FilterProperties["Class"] = "navigationLinkButton";
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = "class=\"navigationLinkButton\"";
                    this.mUIItemCustom.FilterProperties["TagInstance"] = "2";
                    this.mUIItemCustom.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UINotificationToolBar : WinToolBar
    {
        
        public UINotificationToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Notification";
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIASPNETCore10AngularITitleBar : WinTitleBar
    {
        
        public UIASPNETCore10AngularITitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Context";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32768";
            #endregion
        }
        
        #region Properties
        public UIContextMenu UIContextMenu
        {
            get
            {
                if ((this.mUIContextMenu == null))
                {
                    this.mUIContextMenu = new UIContextMenu(this);
                }
                return this.mUIContextMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIContextMenu mUIContextMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIContextMenu : WinMenu
    {
        
        public UIContextMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "Context";
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIInternetoptionsMenuItem
        {
            get
            {
                if ((this.mUIInternetoptionsMenuItem == null))
                {
                    this.mUIInternetoptionsMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIInternetoptionsMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Internet options";
                    #endregion
                }
                return this.mUIInternetoptionsMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIInternetoptionsMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIInternetOptionsWindow : WinWindow
    {
        
        public UIInternetOptionsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Internet Options";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Internet Options");
            #endregion
        }
        
        #region Properties
        public UIDeleteWindow UIDeleteWindow
        {
            get
            {
                if ((this.mUIDeleteWindow == null))
                {
                    this.mUIDeleteWindow = new UIDeleteWindow(this);
                }
                return this.mUIDeleteWindow;
            }
        }
        
        public UIApplyWindow UIApplyWindow
        {
            get
            {
                if ((this.mUIApplyWindow == null))
                {
                    this.mUIApplyWindow = new UIApplyWindow(this);
                }
                return this.mUIApplyWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIDeleteWindow mUIDeleteWindow;
        
        private UIApplyWindow mUIApplyWindow;
        
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDeleteWindow : WinWindow
    {
        
        public UIDeleteWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "5501";
            this.WindowTitles.Add("Internet Options");
            #endregion
        }
        
        #region Properties
        public WinButton UIDeleteButton
        {
            get
            {
                if ((this.mUIDeleteButton == null))
                {
                    this.mUIDeleteButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIDeleteButton.SearchProperties[WinButton.PropertyNames.Name] = "Delete...";
                    this.mUIDeleteButton.WindowTitles.Add("Internet Options");
                    #endregion
                }
                return this.mUIDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIDeleteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIApplyWindow : WinWindow
    {
        
        public UIApplyWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "12321";
            this.WindowTitles.Add("Internet Options");
            #endregion
        }
        
        #region Properties
        public WinButton UIApplyButton
        {
            get
            {
                if ((this.mUIApplyButton == null))
                {
                    this.mUIApplyButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIApplyButton.SearchProperties[WinButton.PropertyNames.Name] = "Apply";
                    this.mUIApplyButton.WindowTitles.Add("Internet Options");
                    #endregion
                }
                return this.mUIApplyButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIApplyButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "1";
            this.WindowTitles.Add("Internet Options");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("Internet Options");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDeleteBrowsingHistorWindow : WinWindow
    {
        
        public UIDeleteBrowsingHistorWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Delete Browsing History";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Delete Browsing History");
            #endregion
        }
        
        #region Properties
        public UIDeleteWindow1 UIDeleteWindow
        {
            get
            {
                if ((this.mUIDeleteWindow == null))
                {
                    this.mUIDeleteWindow = new UIDeleteWindow1(this);
                }
                return this.mUIDeleteWindow;
            }
        }
        
        public WinControl UIDeleteBrowsingHistorDialog
        {
            get
            {
                if ((this.mUIDeleteBrowsingHistorDialog == null))
                {
                    this.mUIDeleteBrowsingHistorDialog = new WinControl(this);
                    #region Search Criteria
                    this.mUIDeleteBrowsingHistorDialog.SearchProperties[UITestControl.PropertyNames.Name] = "Delete Browsing History";
                    this.mUIDeleteBrowsingHistorDialog.SearchProperties[UITestControl.PropertyNames.ControlType] = "Dialog";
                    this.mUIDeleteBrowsingHistorDialog.WindowTitles.Add("Delete Browsing History");
                    #endregion
                }
                return this.mUIDeleteBrowsingHistorDialog;
            }
        }
        #endregion
        
        #region Fields
        private UIDeleteWindow1 mUIDeleteWindow;
        
        private WinControl mUIDeleteBrowsingHistorDialog;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDeleteWindow1 : WinWindow
    {
        
        public UIDeleteWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "5543";
            this.WindowTitles.Add("Delete Browsing History");
            #endregion
        }
        
        #region Properties
        public WinButton UIDeleteButton
        {
            get
            {
                if ((this.mUIDeleteButton == null))
                {
                    this.mUIDeleteButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIDeleteButton.SearchProperties[WinButton.PropertyNames.Name] = "Delete";
                    this.mUIDeleteButton.WindowTitles.Add("Delete Browsing History");
                    #endregion
                }
                return this.mUIDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIDeleteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGoogleInternetExplorWindow1 : BrowserWindow
    {
        
        public UIGoogleInternetExplorWindow1()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            this.WindowTitles.Add("http://qa.company.com/");
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGoogleInternetExplorWindow2 : BrowserWindow
    {
        
        public UIGoogleInternetExplorWindow2()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            this.WindowTitles.Add("http://qa.company.com/");
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIASPNETCore10AngularIDocument3 UIASPNETCore10AngularIDocument
        {
            get
            {
                if ((this.mUIASPNETCore10AngularIDocument == null))
                {
                    this.mUIASPNETCore10AngularIDocument = new UIASPNETCore10AngularIDocument3(this);
                }
                return this.mUIASPNETCore10AngularIDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIASPNETCore10AngularIDocument3 mUIASPNETCore10AngularIDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIASPNETCore10AngularIDocument3 : HtmlDocument
    {
        
        public UIASPNETCore10AngularIDocument3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "ASP.NET Core 1.0 Angular IdentityServer4 Client";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://qa.company.com/";
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            #endregion
        }
        
        #region Properties
        public UIContactInfoLoginPane2 UIContactInfoLoginPane
        {
            get
            {
                if ((this.mUIContactInfoLoginPane == null))
                {
                    this.mUIContactInfoLoginPane = new UIContactInfoLoginPane2(this);
                }
                return this.mUIContactInfoLoginPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContactInfoLoginPane2 mUIContactInfoLoginPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIContactInfoLoginPane2 : HtmlDiv
    {
        
        public UIContactInfoLoginPane2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "navbar";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Contact Info\r\n\r\n  \r\nLogin\r\n\r\n \r\n \r\n  ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "navbar-collapse collapse";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"navbar-collapse collapse\" id=\"navbar\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties["TagName"] = "A";
                    this.mUIItemCustom.SearchProperties["Id"] = null;
                    this.mUIItemCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItemCustom.FilterProperties["Class"] = "navigationLinkButton";
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = "class=\"navigationLinkButton\"";
                    this.mUIItemCustom.FilterProperties["TagInstance"] = "2";
                    this.mUIItemCustom.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGoogleInternetExplorWindow3 : BrowserWindow
    {
        
        public UIGoogleInternetExplorWindow3()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGoogleInternetExplorWindow4 : BrowserWindow
    {
        
        public UIGoogleInternetExplorWindow4()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGoogleInternetExplorWindow5 : BrowserWindow
    {
        
        public UIGoogleInternetExplorWindow5()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIASPNETCore10AngularIDocument4 UIASPNETCore10AngularIDocument
        {
            get
            {
                if ((this.mUIASPNETCore10AngularIDocument == null))
                {
                    this.mUIASPNETCore10AngularIDocument = new UIASPNETCore10AngularIDocument4(this);
                }
                return this.mUIASPNETCore10AngularIDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIASPNETCore10AngularIDocument4 mUIASPNETCore10AngularIDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIASPNETCore10AngularIDocument4 : HtmlDocument
    {
        
        public UIASPNETCore10AngularIDocument4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "ASP.NET Core 1.0 Angular IdentityServer4 Client";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://qa.company.com/";
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            #endregion
        }
        
        #region Properties
        public UIContactInfoLoginPane3 UIContactInfoLoginPane
        {
            get
            {
                if ((this.mUIContactInfoLoginPane == null))
                {
                    this.mUIContactInfoLoginPane = new UIContactInfoLoginPane3(this);
                }
                return this.mUIContactInfoLoginPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContactInfoLoginPane3 mUIContactInfoLoginPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIContactInfoLoginPane3 : HtmlDiv
    {
        
        public UIContactInfoLoginPane3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "navbar";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Contact Info\r\n\r\n  \r\nLogin\r\n\r\n \r\n \r\n  ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "navbar-collapse collapse";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"navbar-collapse collapse\" id=\"navbar\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties["TagName"] = "A";
                    this.mUIItemCustom.SearchProperties["Id"] = null;
                    this.mUIItemCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItemCustom.FilterProperties["Class"] = "navigationLinkButton";
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = "class=\"navigationLinkButton\"";
                    this.mUIItemCustom.FilterProperties["TagInstance"] = "2";
                    this.mUIItemCustom.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGoogleInternetExplorWindow6 : BrowserWindow
    {
        
        public UIGoogleInternetExplorWindow6()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIMyCompanyDocument2 UIMyCompanyDocument
        {
            get
            {
                if ((this.mUIMyCompanyDocument == null))
                {
                    this.mUIMyCompanyDocument = new UIMyCompanyDocument2(this);
                }
                return this.mUIMyCompanyDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIMyCompanyDocument2 mUIMyCompanyDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMyCompanyDocument2 : HtmlDocument
    {
        
        public UIMyCompanyDocument2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "My Company";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/account/login";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = @"http://qa.companyapi.com/account/login?returnUrl=%2Fconnect%2Fauthorize%2Flogin%3Fclient_id%3Dangularclient%26redirect_uri%3Dhttp%253A%252F%252Fqa.company.com%26response_type%3Did_token%2520token%26scope%3Dopenid%2520profile%2520role%2520accountapi%26nonce%3DN0.63622640438398921505772920074";
            this.WindowTitles.Add("My Company");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIEmailEdit
        {
            get
            {
                if ((this.mUIEmailEdit == null))
                {
                    this.mUIEmailEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Email";
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Email";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Email\" class=\"form-control\" id=\"Em";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIEmailEdit.WindowTitles.Add("My Company");
                    #endregion
                }
                return this.mUIEmailEdit;
            }
        }
        
        public HtmlEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Password";
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Password\" class=\"form-control\" id=";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "3";
                    this.mUIPasswordEdit.WindowTitles.Add("My Company");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIEmailEdit;
        
        private HtmlEdit mUIPasswordEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGoogleInternetExplorWindow7 : BrowserWindow
    {
        
        public UIGoogleInternetExplorWindow7()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGoogleInternetExplorWindow8 : BrowserWindow
    {
        
        public UIGoogleInternetExplorWindow8()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIAddressBarClient UIAddressBarClient
        {
            get
            {
                if ((this.mUIAddressBarClient == null))
                {
                    this.mUIAddressBarClient = new UIAddressBarClient(this);
                }
                return this.mUIAddressBarClient;
            }
        }
        #endregion
        
        #region Fields
        private UIAddressBarClient mUIAddressBarClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIAddressBarClient : WinClient
    {
        
        public UIAddressBarClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Address Bar";
            this.WindowTitles.Add("Google");
            this.WindowTitles.Add("http://qa.company.com/");
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            #endregion
        }
        
        #region Properties
        public WinEdit UIAddressandsearchusinEdit
        {
            get
            {
                if ((this.mUIAddressandsearchusinEdit == null))
                {
                    this.mUIAddressandsearchusinEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIAddressandsearchusinEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Address and search using Bing";
                    this.mUIAddressandsearchusinEdit.WindowTitles.Add("Google");
                    this.mUIAddressandsearchusinEdit.WindowTitles.Add("http://qa.company.com/");
                    this.mUIAddressandsearchusinEdit.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
                    #endregion
                }
                return this.mUIAddressandsearchusinEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIAddressandsearchusinEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGoogleInternetExplorWindow9 : BrowserWindow
    {
        
        public UIGoogleInternetExplorWindow9()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGoogleInternetExplorWindow10 : BrowserWindow
    {
        
        public UIGoogleInternetExplorWindow10()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIASPNETCore10AngularIDocument5 UIASPNETCore10AngularIDocument
        {
            get
            {
                if ((this.mUIASPNETCore10AngularIDocument == null))
                {
                    this.mUIASPNETCore10AngularIDocument = new UIASPNETCore10AngularIDocument5(this);
                }
                return this.mUIASPNETCore10AngularIDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIASPNETCore10AngularIDocument5 mUIASPNETCore10AngularIDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIASPNETCore10AngularIDocument5 : HtmlDocument
    {
        
        public UIASPNETCore10AngularIDocument5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "ASP.NET Core 1.0 Angular IdentityServer4 Client";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://qa.company.com/";
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            #endregion
        }
        
        #region Properties
        public UIContactInfoLoginPane4 UIContactInfoLoginPane
        {
            get
            {
                if ((this.mUIContactInfoLoginPane == null))
                {
                    this.mUIContactInfoLoginPane = new UIContactInfoLoginPane4(this);
                }
                return this.mUIContactInfoLoginPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContactInfoLoginPane4 mUIContactInfoLoginPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIContactInfoLoginPane4 : HtmlDiv
    {
        
        public UIContactInfoLoginPane4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "navbar";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Contact Info\r\n\r\n  \r\nLogin\r\n\r\n \r\n \r\n  ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "navbar-collapse collapse";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"navbar-collapse collapse\" id=\"navbar\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties["TagName"] = "A";
                    this.mUIItemCustom.SearchProperties["Id"] = null;
                    this.mUIItemCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItemCustom.FilterProperties["Class"] = "navigationLinkButton";
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = "class=\"navigationLinkButton\"";
                    this.mUIItemCustom.FilterProperties["TagInstance"] = "2";
                    this.mUIItemCustom.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGoogleInternetExplorWindow11 : BrowserWindow
    {
        
        public UIGoogleInternetExplorWindow11()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIASPNETCore10AngularIDocument6 UIASPNETCore10AngularIDocument
        {
            get
            {
                if ((this.mUIASPNETCore10AngularIDocument == null))
                {
                    this.mUIASPNETCore10AngularIDocument = new UIASPNETCore10AngularIDocument6(this);
                }
                return this.mUIASPNETCore10AngularIDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIASPNETCore10AngularIDocument6 mUIASPNETCore10AngularIDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIASPNETCore10AngularIDocument6 : HtmlDocument
    {
        
        public UIASPNETCore10AngularIDocument6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "ASP.NET Core 1.0 Angular IdentityServer4 Client";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://qa.company.com/";
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            #endregion
        }
        
        #region Properties
        public UIContactInfoLoginPane5 UIContactInfoLoginPane
        {
            get
            {
                if ((this.mUIContactInfoLoginPane == null))
                {
                    this.mUIContactInfoLoginPane = new UIContactInfoLoginPane5(this);
                }
                return this.mUIContactInfoLoginPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContactInfoLoginPane5 mUIContactInfoLoginPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIContactInfoLoginPane5 : HtmlDiv
    {
        
        public UIContactInfoLoginPane5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "navbar";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Contact Info\r\n\r\n  \r\nLogin\r\n\r\n \r\n \r\n  ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "navbar-collapse collapse";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"navbar-collapse collapse\" id=\"navbar\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties["TagName"] = "A";
                    this.mUIItemCustom.SearchProperties["Id"] = null;
                    this.mUIItemCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItemCustom.FilterProperties["Class"] = "navigationLinkButton";
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = "class=\"navigationLinkButton\"";
                    this.mUIItemCustom.FilterProperties["TagInstance"] = "2";
                    this.mUIItemCustom.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGoogleInternetExplorWindow12 : BrowserWindow
    {
        
        public UIGoogleInternetExplorWindow12()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIMyCompanyDocument3 UIMyCompanyDocument
        {
            get
            {
                if ((this.mUIMyCompanyDocument == null))
                {
                    this.mUIMyCompanyDocument = new UIMyCompanyDocument3(this);
                }
                return this.mUIMyCompanyDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIMyCompanyDocument3 mUIMyCompanyDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMyCompanyDocument3 : HtmlDocument
    {
        
        public UIMyCompanyDocument3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "My Company";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/account/login";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = @"http://qa.companyapi.com/account/login?returnUrl=%2Fconnect%2Fauthorize%2Flogin%3Fclient_id%3Dangularclient%26redirect_uri%3Dhttp%253A%252F%252Fqa.company.com%26response_type%3Did_token%2520token%26scope%3Dopenid%2520profile%2520role%2520accountapi%26nonce%3DN0.87800650265258581505774281338";
            this.WindowTitles.Add("My Company");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIEmailEdit
        {
            get
            {
                if ((this.mUIEmailEdit == null))
                {
                    this.mUIEmailEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Email";
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Email";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Email\" class=\"form-control\" id=\"Em";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIEmailEdit.WindowTitles.Add("My Company");
                    #endregion
                }
                return this.mUIEmailEdit;
            }
        }
        
        public HtmlEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Password";
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Password\" class=\"form-control\" id=";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "3";
                    this.mUIPasswordEdit.WindowTitles.Add("My Company");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        
        public HtmlButton UILoginButton
        {
            get
            {
                if ((this.mUILoginButton == null))
                {
                    this.mUILoginButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Login";
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-primary";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-primary\"";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "2";
                    this.mUILoginButton.WindowTitles.Add("My Company");
                    #endregion
                }
                return this.mUILoginButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIEmailEdit;
        
        private HtmlEdit mUIPasswordEdit;
        
        private HtmlButton mUILoginButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGoogleInternetExplorWindow13 : BrowserWindow
    {
        
        public UIGoogleInternetExplorWindow13()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGoogleInternetExplorWindow14 : BrowserWindow
    {
        
        public UIGoogleInternetExplorWindow14()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGoogleInternetExplorWindow15 : BrowserWindow
    {
        
        public UIGoogleInternetExplorWindow15()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIASPNETCore10AngularIDocument7 UIASPNETCore10AngularIDocument
        {
            get
            {
                if ((this.mUIASPNETCore10AngularIDocument == null))
                {
                    this.mUIASPNETCore10AngularIDocument = new UIASPNETCore10AngularIDocument7(this);
                }
                return this.mUIASPNETCore10AngularIDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIASPNETCore10AngularIDocument7 mUIASPNETCore10AngularIDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIASPNETCore10AngularIDocument7 : HtmlDocument
    {
        
        public UIASPNETCore10AngularIDocument7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "ASP.NET Core 1.0 Angular IdentityServer4 Client";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://qa.company.com/";
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            #endregion
        }
        
        #region Properties
        public UIContactInfoLoginPane6 UIContactInfoLoginPane
        {
            get
            {
                if ((this.mUIContactInfoLoginPane == null))
                {
                    this.mUIContactInfoLoginPane = new UIContactInfoLoginPane6(this);
                }
                return this.mUIContactInfoLoginPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContactInfoLoginPane6 mUIContactInfoLoginPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIContactInfoLoginPane6 : HtmlDiv
    {
        
        public UIContactInfoLoginPane6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "navbar";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Contact Info\r\n\r\n  \r\nLogin\r\n\r\n \r\n \r\n  ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "navbar-collapse collapse";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"navbar-collapse collapse\" id=\"navbar\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties["TagName"] = "A";
                    this.mUIItemCustom.SearchProperties["Id"] = null;
                    this.mUIItemCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItemCustom.FilterProperties["Class"] = "navigationLinkButton";
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = "class=\"navigationLinkButton\"";
                    this.mUIItemCustom.FilterProperties["TagInstance"] = "2";
                    this.mUIItemCustom.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGoogleInternetExplorWindow16 : BrowserWindow
    {
        
        public UIGoogleInternetExplorWindow16()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            this.WindowTitles.Add("My Company");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIMyCompanyDocument4 UIMyCompanyDocument
        {
            get
            {
                if ((this.mUIMyCompanyDocument == null))
                {
                    this.mUIMyCompanyDocument = new UIMyCompanyDocument4(this);
                }
                return this.mUIMyCompanyDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIMyCompanyDocument4 mUIMyCompanyDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMyCompanyDocument4 : HtmlDocument
    {
        
        public UIMyCompanyDocument4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "My Company";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/account/login";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = @"http://qa.companyapi.com/account/login?returnUrl=%2Fconnect%2Fauthorize%2Flogin%3Fclient_id%3Dangularclient%26redirect_uri%3Dhttp%253A%252F%252Fqa.company.com%26response_type%3Did_token%2520token%26scope%3Dopenid%2520profile%2520role%2520accountapi%26nonce%3DN0.6349764930781091505775081523";
            this.WindowTitles.Add("My Company");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIEmailEdit
        {
            get
            {
                if ((this.mUIEmailEdit == null))
                {
                    this.mUIEmailEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Email";
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Email";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Email\" class=\"form-control\" id=\"Em";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIEmailEdit.WindowTitles.Add("My Company");
                    #endregion
                }
                return this.mUIEmailEdit;
            }
        }
        
        public HtmlEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Password";
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Password\" class=\"form-control\" id=";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "3";
                    this.mUIPasswordEdit.WindowTitles.Add("My Company");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        
        public HtmlButton UILoginButton
        {
            get
            {
                if ((this.mUILoginButton == null))
                {
                    this.mUILoginButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Login";
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-primary";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-primary\"";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "2";
                    this.mUILoginButton.WindowTitles.Add("My Company");
                    #endregion
                }
                return this.mUILoginButton;
            }
        }
        
        public HtmlDiv UIErrorInvalidusernamePane
        {
            get
            {
                if ((this.mUIErrorInvalidusernamePane == null))
                {
                    this.mUIErrorInvalidusernamePane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIErrorInvalidusernamePane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIErrorInvalidusernamePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIErrorInvalidusernamePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Error \r\nInvalid username or password";
                    this.mUIErrorInvalidusernamePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIErrorInvalidusernamePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "alert alert-danger";
                    this.mUIErrorInvalidusernamePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"alert alert-danger\"";
                    this.mUIErrorInvalidusernamePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "7";
                    this.mUIErrorInvalidusernamePane.WindowTitles.Add("My Company");
                    #endregion
                }
                return this.mUIErrorInvalidusernamePane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIEmailEdit;
        
        private HtmlEdit mUIPasswordEdit;
        
        private HtmlButton mUILoginButton;
        
        private HtmlDiv mUIErrorInvalidusernamePane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGoogleInternetExplorWindow17 : BrowserWindow
    {
        
        public UIGoogleInternetExplorWindow17()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGoogleInternetExplorWindow18 : BrowserWindow
    {
        
        public UIGoogleInternetExplorWindow18()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGoogleInternetExplorWindow19 : BrowserWindow
    {
        
        public UIGoogleInternetExplorWindow19()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIASPNETCore10AngularIDocument8 UIASPNETCore10AngularIDocument
        {
            get
            {
                if ((this.mUIASPNETCore10AngularIDocument == null))
                {
                    this.mUIASPNETCore10AngularIDocument = new UIASPNETCore10AngularIDocument8(this);
                }
                return this.mUIASPNETCore10AngularIDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIASPNETCore10AngularIDocument8 mUIASPNETCore10AngularIDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIASPNETCore10AngularIDocument8 : HtmlDocument
    {
        
        public UIASPNETCore10AngularIDocument8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "ASP.NET Core 1.0 Angular IdentityServer4 Client";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://qa.company.com/";
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            #endregion
        }
        
        #region Properties
        public UIContactInfoLoginPane7 UIContactInfoLoginPane
        {
            get
            {
                if ((this.mUIContactInfoLoginPane == null))
                {
                    this.mUIContactInfoLoginPane = new UIContactInfoLoginPane7(this);
                }
                return this.mUIContactInfoLoginPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContactInfoLoginPane7 mUIContactInfoLoginPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIContactInfoLoginPane7 : HtmlDiv
    {
        
        public UIContactInfoLoginPane7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "navbar";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Contact Info\r\n\r\n  \r\nLogin\r\n\r\n \r\n \r\n  ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "navbar-collapse collapse";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"navbar-collapse collapse\" id=\"navbar\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties["TagName"] = "A";
                    this.mUIItemCustom.SearchProperties["Id"] = null;
                    this.mUIItemCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItemCustom.FilterProperties["Class"] = "navigationLinkButton";
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = "class=\"navigationLinkButton\"";
                    this.mUIItemCustom.FilterProperties["TagInstance"] = "2";
                    this.mUIItemCustom.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGoogleInternetExplorWindow20 : BrowserWindow
    {
        
        public UIGoogleInternetExplorWindow20()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIMyCompanyDocument5 UIMyCompanyDocument
        {
            get
            {
                if ((this.mUIMyCompanyDocument == null))
                {
                    this.mUIMyCompanyDocument = new UIMyCompanyDocument5(this);
                }
                return this.mUIMyCompanyDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIMyCompanyDocument5 mUIMyCompanyDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMyCompanyDocument5 : HtmlDocument
    {
        
        public UIMyCompanyDocument5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "My Company";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/account/login";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = @"http://qa.companyapi.com/account/login?returnUrl=%2Fconnect%2Fauthorize%2Flogin%3Fclient_id%3Dangularclient%26redirect_uri%3Dhttp%253A%252F%252Fqa.company.com%26response_type%3Did_token%2520token%26scope%3Dopenid%2520profile%2520role%2520accountapi%26nonce%3DN0.318931736851839061505775537884";
            this.WindowTitles.Add("My Company");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIEmailEdit
        {
            get
            {
                if ((this.mUIEmailEdit == null))
                {
                    this.mUIEmailEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Email";
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Email";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Email\" class=\"form-control\" id=\"Em";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIEmailEdit.WindowTitles.Add("My Company");
                    #endregion
                }
                return this.mUIEmailEdit;
            }
        }
        
        public HtmlEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Password";
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Password\" class=\"form-control\" id=";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "3";
                    this.mUIPasswordEdit.WindowTitles.Add("My Company");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        
        public HtmlButton UILoginButton
        {
            get
            {
                if ((this.mUILoginButton == null))
                {
                    this.mUILoginButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Login";
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-primary";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-primary\"";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "2";
                    this.mUILoginButton.WindowTitles.Add("My Company");
                    #endregion
                }
                return this.mUILoginButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIEmailEdit;
        
        private HtmlEdit mUIPasswordEdit;
        
        private HtmlButton mUILoginButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGoogleInternetExplorWindow21 : BrowserWindow
    {
        
        public UIGoogleInternetExplorWindow21()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            this.WindowTitles.Add("http://qa.company.com/");
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            this.WindowTitles.Add("My Company");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGoogleInternetExplorWindow22 : BrowserWindow
    {
        
        public UIGoogleInternetExplorWindow22()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            this.WindowTitles.Add("http://qa.company.com/");
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            this.WindowTitles.Add("My Company");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIAddressComboControlToolBar UIAddressComboControlToolBar
        {
            get
            {
                if ((this.mUIAddressComboControlToolBar == null))
                {
                    this.mUIAddressComboControlToolBar = new UIAddressComboControlToolBar(this);
                }
                return this.mUIAddressComboControlToolBar;
            }
        }
        #endregion
        
        #region Fields
        private UIAddressComboControlToolBar mUIAddressComboControlToolBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIAddressComboControlToolBar : WinToolBar
    {
        
        public UIAddressComboControlToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinToolBar.PropertyNames.Name] = "Address Combo Control";
            this.WindowTitles.Add("Google");
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIAddressMenuItem
        {
            get
            {
                if ((this.mUIAddressMenuItem == null))
                {
                    this.mUIAddressMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIAddressMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Address";
                    this.mUIAddressMenuItem.WindowTitles.Add("Google");
                    #endregion
                }
                return this.mUIAddressMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIAddressMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGoogleInternetExplorWindow23 : BrowserWindow
    {
        
        public UIGoogleInternetExplorWindow23()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            this.WindowTitles.Add("http://qa.company.com/");
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            this.WindowTitles.Add("My Company");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGoogleInternetExplorWindow24 : BrowserWindow
    {
        
        public UIGoogleInternetExplorWindow24()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            this.WindowTitles.Add("http://qa.company.com/");
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            this.WindowTitles.Add("My Company");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIASPNETCore10AngularIDocument9 UIASPNETCore10AngularIDocument
        {
            get
            {
                if ((this.mUIASPNETCore10AngularIDocument == null))
                {
                    this.mUIASPNETCore10AngularIDocument = new UIASPNETCore10AngularIDocument9(this);
                }
                return this.mUIASPNETCore10AngularIDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIASPNETCore10AngularIDocument9 mUIASPNETCore10AngularIDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIASPNETCore10AngularIDocument9 : HtmlDocument
    {
        
        public UIASPNETCore10AngularIDocument9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "ASP.NET Core 1.0 Angular IdentityServer4 Client";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://qa.company.com/";
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            #endregion
        }
        
        #region Properties
        public UIContactInfoLoginPane8 UIContactInfoLoginPane
        {
            get
            {
                if ((this.mUIContactInfoLoginPane == null))
                {
                    this.mUIContactInfoLoginPane = new UIContactInfoLoginPane8(this);
                }
                return this.mUIContactInfoLoginPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContactInfoLoginPane8 mUIContactInfoLoginPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIContactInfoLoginPane8 : HtmlDiv
    {
        
        public UIContactInfoLoginPane8(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "navbar";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Contact Info\r\n\r\n  \r\nLogin\r\n\r\n \r\n \r\n  ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "navbar-collapse collapse";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"navbar-collapse collapse\" id=\"navbar\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties["TagName"] = "A";
                    this.mUIItemCustom.SearchProperties["Id"] = null;
                    this.mUIItemCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItemCustom.FilterProperties["Class"] = "navigationLinkButton";
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = "class=\"navigationLinkButton\"";
                    this.mUIItemCustom.FilterProperties["TagInstance"] = "2";
                    this.mUIItemCustom.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGoogleInternetExplorWindow25 : BrowserWindow
    {
        
        public UIGoogleInternetExplorWindow25()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            this.WindowTitles.Add("http://qa.company.com/");
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            this.WindowTitles.Add("My Company");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIMyCompanyDocument6 UIMyCompanyDocument
        {
            get
            {
                if ((this.mUIMyCompanyDocument == null))
                {
                    this.mUIMyCompanyDocument = new UIMyCompanyDocument6(this);
                }
                return this.mUIMyCompanyDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIMyCompanyDocument6 mUIMyCompanyDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMyCompanyDocument6 : HtmlDocument
    {
        
        public UIMyCompanyDocument6(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "My Company";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/account/login";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = @"http://qa.companyapi.com/account/login?returnUrl=%2Fconnect%2Fauthorize%2Flogin%3Fclient_id%3Dangularclient%26redirect_uri%3Dhttp%253A%252F%252Fqa.company.com%26response_type%3Did_token%2520token%26scope%3Dopenid%2520profile%2520role%2520accountapi%26nonce%3DN0.48818982226786691505835288559";
            this.WindowTitles.Add("My Company");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIEmailEdit
        {
            get
            {
                if ((this.mUIEmailEdit == null))
                {
                    this.mUIEmailEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Email";
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Email";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Email\" class=\"form-control\" id=\"Em";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIEmailEdit.WindowTitles.Add("My Company");
                    #endregion
                }
                return this.mUIEmailEdit;
            }
        }
        
        public HtmlEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Password";
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Password\" class=\"form-control\" id=";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "3";
                    this.mUIPasswordEdit.WindowTitles.Add("My Company");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        
        public HtmlButton UILoginButton
        {
            get
            {
                if ((this.mUILoginButton == null))
                {
                    this.mUILoginButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Login";
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-primary";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-primary\"";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "2";
                    this.mUILoginButton.WindowTitles.Add("My Company");
                    #endregion
                }
                return this.mUILoginButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIEmailEdit;
        
        private HtmlEdit mUIPasswordEdit;
        
        private HtmlButton mUILoginButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGoogleInternetExplorWindow26 : BrowserWindow
    {
        
        public UIGoogleInternetExplorWindow26()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            this.WindowTitles.Add("My Company");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGoogleInternetExplorWindow27 : BrowserWindow
    {
        
        public UIGoogleInternetExplorWindow27()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            this.WindowTitles.Add("My Company");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGoogleInternetExplorWindow28 : BrowserWindow
    {
        
        public UIGoogleInternetExplorWindow28()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            this.WindowTitles.Add("My Company");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIASPNETCore10AngularIDocument10 UIASPNETCore10AngularIDocument
        {
            get
            {
                if ((this.mUIASPNETCore10AngularIDocument == null))
                {
                    this.mUIASPNETCore10AngularIDocument = new UIASPNETCore10AngularIDocument10(this);
                }
                return this.mUIASPNETCore10AngularIDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIASPNETCore10AngularIDocument10 mUIASPNETCore10AngularIDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIASPNETCore10AngularIDocument10 : HtmlDocument
    {
        
        public UIASPNETCore10AngularIDocument10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "ASP.NET Core 1.0 Angular IdentityServer4 Client";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://qa.company.com/";
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            #endregion
        }
        
        #region Properties
        public UIContactInfoLoginPane9 UIContactInfoLoginPane
        {
            get
            {
                if ((this.mUIContactInfoLoginPane == null))
                {
                    this.mUIContactInfoLoginPane = new UIContactInfoLoginPane9(this);
                }
                return this.mUIContactInfoLoginPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContactInfoLoginPane9 mUIContactInfoLoginPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIContactInfoLoginPane9 : HtmlDiv
    {
        
        public UIContactInfoLoginPane9(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "navbar";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Contact Info\r\n\r\n  \r\nLogin\r\n\r\n \r\n \r\n  ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "navbar-collapse collapse";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"navbar-collapse collapse\" id=\"navbar\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties["TagName"] = "A";
                    this.mUIItemCustom.SearchProperties["Id"] = null;
                    this.mUIItemCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItemCustom.FilterProperties["Class"] = "navigationLinkButton";
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = "class=\"navigationLinkButton\"";
                    this.mUIItemCustom.FilterProperties["TagInstance"] = "2";
                    this.mUIItemCustom.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGoogleInternetExplorWindow29 : BrowserWindow
    {
        
        public UIGoogleInternetExplorWindow29()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            this.WindowTitles.Add("My Company");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIASPNETCore10AngularIDocument11 UIASPNETCore10AngularIDocument
        {
            get
            {
                if ((this.mUIASPNETCore10AngularIDocument == null))
                {
                    this.mUIASPNETCore10AngularIDocument = new UIASPNETCore10AngularIDocument11(this);
                }
                return this.mUIASPNETCore10AngularIDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIASPNETCore10AngularIDocument11 mUIASPNETCore10AngularIDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIASPNETCore10AngularIDocument11 : HtmlDocument
    {
        
        public UIASPNETCore10AngularIDocument11(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "ASP.NET Core 1.0 Angular IdentityServer4 Client";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://qa.company.com/";
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            #endregion
        }
        
        #region Properties
        public UIContactInfoLoginPane10 UIContactInfoLoginPane
        {
            get
            {
                if ((this.mUIContactInfoLoginPane == null))
                {
                    this.mUIContactInfoLoginPane = new UIContactInfoLoginPane10(this);
                }
                return this.mUIContactInfoLoginPane;
            }
        }
        #endregion
        
        #region Fields
        private UIContactInfoLoginPane10 mUIContactInfoLoginPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIContactInfoLoginPane10 : HtmlDiv
    {
        
        public UIContactInfoLoginPane10(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "navbar";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Contact Info\r\n\r\n  \r\nLogin\r\n\r\n \r\n \r\n  ";
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = "navbar-collapse collapse";
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"navbar-collapse collapse\" id=\"navbar\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "4";
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            #endregion
        }
        
        #region Properties
        public HtmlCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new HtmlCustom(this);
                    #region Search Criteria
                    this.mUIItemCustom.SearchProperties["TagName"] = "A";
                    this.mUIItemCustom.SearchProperties["Id"] = null;
                    this.mUIItemCustom.SearchProperties[UITestControl.PropertyNames.Name] = null;
                    this.mUIItemCustom.FilterProperties["Class"] = "navigationLinkButton";
                    this.mUIItemCustom.FilterProperties["ControlDefinition"] = "class=\"navigationLinkButton\"";
                    this.mUIItemCustom.FilterProperties["TagInstance"] = "2";
                    this.mUIItemCustom.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
                    #endregion
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGoogleInternetExplorWindow30 : BrowserWindow
    {
        
        public UIGoogleInternetExplorWindow30()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            this.WindowTitles.Add("ASP.NET Core 1.0 Angular IdentityServer4 Client");
            this.WindowTitles.Add("My Company");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIMyCompanyDocument7 UIMyCompanyDocument
        {
            get
            {
                if ((this.mUIMyCompanyDocument == null))
                {
                    this.mUIMyCompanyDocument = new UIMyCompanyDocument7(this);
                }
                return this.mUIMyCompanyDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIMyCompanyDocument7 mUIMyCompanyDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMyCompanyDocument7 : HtmlDocument
    {
        
        public UIMyCompanyDocument7(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "My Company";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/account/login";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = @"http://qa.companyapi.com/account/login?returnUrl=%2Fconnect%2Fauthorize%2Flogin%3Fclient_id%3Dangularclient%26redirect_uri%3Dhttp%253A%252F%252Fqa.company.com%26response_type%3Did_token%2520token%26scope%3Dopenid%2520profile%2520role%2520accountapi%26nonce%3DN0.036389908414080741505940149410";
            this.WindowTitles.Add("My Company");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIEmailEdit
        {
            get
            {
                if ((this.mUIEmailEdit == null))
                {
                    this.mUIEmailEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Email";
                    this.mUIEmailEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Email";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Email\" class=\"form-control\" id=\"Em";
                    this.mUIEmailEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIEmailEdit.WindowTitles.Add("My Company");
                    #endregion
                }
                return this.mUIEmailEdit;
            }
        }
        
        public HtmlEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Password";
                    this.mUIPasswordEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Password";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "PASSWORD";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Password\" class=\"form-control\" id=";
                    this.mUIPasswordEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "3";
                    this.mUIPasswordEdit.WindowTitles.Add("My Company");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        
        public HtmlButton UILoginButton
        {
            get
            {
                if ((this.mUILoginButton == null))
                {
                    this.mUILoginButton = new HtmlButton(this);
                    #region Search Criteria
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Login";
                    this.mUILoginButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-primary";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-primary\"";
                    this.mUILoginButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "2";
                    this.mUILoginButton.WindowTitles.Add("My Company");
                    #endregion
                }
                return this.mUILoginButton;
            }
        }
        
        public HtmlDiv UIErrorInvalidusernamePane
        {
            get
            {
                if ((this.mUIErrorInvalidusernamePane == null))
                {
                    this.mUIErrorInvalidusernamePane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIErrorInvalidusernamePane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIErrorInvalidusernamePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIErrorInvalidusernamePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Error \r\nInvalid username or password";
                    this.mUIErrorInvalidusernamePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIErrorInvalidusernamePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "alert alert-danger";
                    this.mUIErrorInvalidusernamePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"alert alert-danger\"";
                    this.mUIErrorInvalidusernamePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "7";
                    this.mUIErrorInvalidusernamePane.WindowTitles.Add("My Company");
                    #endregion
                }
                return this.mUIErrorInvalidusernamePane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIEmailEdit;
        
        private HtmlEdit mUIPasswordEdit;
        
        private HtmlButton mUILoginButton;
        
        private HtmlDiv mUIErrorInvalidusernamePane;
        #endregion
    }
}
